name: CI

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '20'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Quick validation that everything builds
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: |
            SDKs/Node/package-lock.json
            SDKs/Node/Admin/package-lock.json
            SDKs/Node/Core/package-lock.json
            SDKs/Node/Common/package-lock.json
            ConduitLLM.WebUI/package-lock.json
      
      - name: Validate PostgreSQL migrations
        run: ./scripts/migrations/validate-postgresql-syntax.sh
        
      - name: .NET Build & Test
        run: |
          dotnet restore
          dotnet build --no-restore
          # Run tests but exclude integration tests and timing-sensitive tests
          dotnet test --no-build --verbosity normal --filter "FullyQualifiedName!~IntegrationTests&FullyQualifiedName!~BatchWindow_Should_Trigger_Processing"
      
      - name: NPM Build
        run: |
          cd SDKs/Node
          npm ci
          npm run build
          npm test
      
      - name: WebUI Type Check
        run: |
          cd ConduitLLM.WebUI
          npm ci
          # Clean any stale .next directory before type checking
          rm -rf .next
          npm run type-check

  # Build Docker images (push only from master)
  docker:
    name: Docker - ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - service: webui
            context: .
            dockerfile: ConduitLLM.WebUI/Dockerfile
          - service: http
            context: .
            dockerfile: ConduitLLM.Http/Dockerfile
          - service: admin
            context: .
            dockerfile: ConduitLLM.Admin/Dockerfile
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/knnlabs/conduit-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Publish NPM packages (only from master)
  npm-publish:
    name: NPM Publish
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: |
            SDKs/Node/package-lock.json
            SDKs/Node/Admin/package-lock.json
            SDKs/Node/Core/package-lock.json
            SDKs/Node/Common/package-lock.json
      
      - name: Build and Publish
        run: |
          cd SDKs/Node
          npm ci
          npm run build
          
          # Publish with 'next' tag for continuous releases from master
          # Fail fast if any publish fails
          cd Common && npm publish --tag next --access public
          cd ../Admin && npm publish --tag next --access public
          cd ../Core && npm publish --tag next --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}