name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}

  docker:
    name: Docker - ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [webui, http, admin]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ConduitLLM.${{ matrix.service == 'webui' && 'WebUI' || (matrix.service == 'http' && 'Http' || 'Admin') }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/knnlabs/conduit-${{ matrix.service }}:${{ needs.release.outputs.version }}
            ${{ env.REGISTRY }}/knnlabs/conduit-${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  npm:
    name: NPM Release
    runs-on: ubuntu-latest
    needs: release
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: npm
          cache-dependency-path: |
            SDKs/Node/package-lock.json
            SDKs/Node/Admin/package-lock.json
            SDKs/Node/Core/package-lock.json
            SDKs/Node/Common/package-lock.json
      
      - name: Update versions and publish
        run: |
          VERSION=${{ needs.release.outputs.version }}
          
          cd SDKs/Node
          
          # Update Common version first
          cd Common
          npm version $VERSION --no-git-tag-version
          cd ..
          
          # Update Admin and Core versions AND their Common dependency
          cd Admin
          npm version $VERSION --no-git-tag-version
          # Update the Common dependency to use the new version
          npm install @knn_labs/conduit-common@$VERSION --save-exact
          cd ../Core
          npm version $VERSION --no-git-tag-version
          # Update the Common dependency to use the new version
          npm install @knn_labs/conduit-common@$VERSION --save-exact
          
          # Build all packages
          cd ..
          npm ci
          npm run build
          
          # Publish with 'latest' tag for stable releases
          # Publish Common first since others depend on it
          cd Common && npm publish --tag latest --access public
          cd ../Admin && npm publish --tag latest --access public
          cd ../Core && npm publish --tag latest --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}