@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Authorization
@using ConduitLLM.WebUI.Interfaces

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.svg" />
    <HeadOutlet />
</head>

<body>
    <div id="app-loading">
        <div class="loading-container">
            <div class="mud-progress-circular mud-primary mud-progress-medium mud-progress-indeterminate" role="progressbar" style="height: 40px; width: 40px;">
                <svg class="mud-progress-circular-svg" viewBox="22 22 44 44">
                    <circle class="mud-progress-circular-circle-indeterminate" cx="44" cy="44" r="20" fill="none" stroke-width="4"></circle>
                </svg>
            </div>
            <div class="loading-text">Loading ConduitLLM...</div>
        </div>
    </div>
    <div id="blazor-error-ui" data-nosnippet>
        An unhandled error has occurred.
        <a href="." class="reload">Reload</a>
        <a class="dismiss">X</a>
    </div>
    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(ConduitLLM.WebUI.Components.Layout.MainLayout)">
                    <NotAuthorized>
                        @{
                            // Skip login redirect in insecure mode - authorization is handled by the policy
                            if (!InsecureModeProvider.IsInsecureMode)
                            {
                                var returnUrl = Navigation.ToBaseRelativePath(Navigation.Uri);
                                if (routeData.PageType != typeof(ConduitLLM.WebUI.Components.Pages.Login) && 
                                    routeData.PageType != typeof(ConduitLLM.WebUI.Components.Pages.AccessDenied))
                                {
                                    Navigation.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(returnUrl)}", forceLoad: true);
                                }
                            }
                            // In insecure mode, we won't hit this code path due to the policy, but if we do, don't redirect
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(ConduitLLM.WebUI.Components.Layout.MainLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingAuthenticationState>

    <!-- Required script references for Blazor Server -->
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script src="js/site.js"></script>
    <script src="js/charts.js"></script>
    <script src="js/downloadHelper.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(function() {
                const loadingElement = document.getElementById('app-loading');
                if (loadingElement) loadingElement.style.display = 'none';
            }, 800);
        });
    </script>
</body>

</html>

@code {
    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    [Inject]
    private IInsecureModeProvider InsecureModeProvider { get; set; } = default!;
}
