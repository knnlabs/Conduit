{
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "eslint-comments"],
  "rules": {
    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-misused-promises": "warn",
    "@typescript-eslint/await-thenable": "warn",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow"
      }
    ],
    
    // Prevent underscore prefix bypasses
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase", "snake_case"],
        "leadingUnderscore": "forbid"
      },
      {
        "selector": "property",
        "format": ["camelCase", "PascalCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "forbid",
        "filter": {
          "regex": "^(Content-Type|Content-Disposition|content-type|content-disposition|max_tokens|top_p|presence_penalty|response_format|aspect_ratio|webhook_url|supportsFunctionCalling|supportsVision|supportsImageGeneration|supportsAudioTranscription|supportsTextToSpeech|supportsRealtimeAudio|supportsStreaming|supportsVideoGeneration|supportsEmbeddings|maxContextLength|maxOutputTokens|isDefault|defaultCapabilityType|_note)$",
          "match": false
        }
      }
    ],
    
    // Prevent ESLint disable bypasses - STRICTLY ENFORCED
    "eslint-comments/no-unlimited-disable": "error",
    "eslint-comments/no-unused-disable": "error", 
    "eslint-comments/disable-enable-pair": "error",
    "eslint-comments/no-duplicate-disable": "error",
    "eslint-comments/no-restricted-disable": [
      "error",
      "@typescript-eslint/no-unsafe-*",
      "@typescript-eslint/naming-convention",
      "@typescript-eslint/no-explicit-any"
    ],
    
    // General code quality rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "eqeqeq": ["error", "always"],
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "no-param-reassign": "error",
    "no-return-await": "error",
    "require-await": "off",
    "no-nested-ternary": "warn",
    "no-unneeded-ternary": "error",
    "prefer-template": "error",
    "no-duplicate-imports": "warn",
    
    // React specific rules
    "react/no-array-index-key": "warn",
    "react/jsx-no-useless-fragment": "error",
    "react-hooks/exhaustive-deps": "error",
    
    // Import rules
    "import/order": "off"
  },
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    }
  ]
}
