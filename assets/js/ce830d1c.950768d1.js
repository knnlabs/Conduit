"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2448],{5908:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api-reference/overview","title":"API Overview","description":"An overview of Conduit\'s API","source":"@site/docs/api-reference/overview.md","sourceDirName":"api-reference","slug":"/api-reference/overview","permalink":"/conduit/docs/api-reference/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/knnlabs/conduit/tree/main/website/docs/api-reference/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"API Overview","description":"An overview of Conduit\'s API"},"sidebar":"docsSidebar","previous":{"title":"Web UI Guide","permalink":"/conduit/docs/guides/webui-usage"},"next":{"title":"Chat Completions API","permalink":"/conduit/docs/api-reference/chat-completions"}}');var i=r(4848),t=r(8453);const d={sidebar_position:1,title:"API Overview",description:"An overview of Conduit's API"},o="API Overview",l={},c=[{value:"Base URL",id:"base-url",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Core Endpoints",id:"core-endpoints",level:2},{value:"Response Format",id:"response-format",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Parameters",id:"common-parameters",level:2},{value:"Versioning",id:"versioning",level:2},{value:"Rate Limits",id:"rate-limits",level:2},{value:"Streaming Responses",id:"streaming-responses",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-overview",children:"API Overview"})}),"\n",(0,i.jsx)(n.p,{children:"Conduit provides an OpenAI-compatible REST API that allows you to interact with various LLM providers through a consistent interface."}),"\n",(0,i.jsx)(n.h2,{id:"base-url",children:"Base URL"}),"\n",(0,i.jsx)(n.p,{children:"The base URL for all API requests is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"http://your-conduit-host:5000/v1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"your-conduit-host"})," with your Conduit server address (e.g., ",(0,i.jsx)(n.code,{children:"localhost"})," for local development)."]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"All API requests require authentication using a virtual key in the Authorization header:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Authorization: Bearer condt_your_virtual_key\n"})}),"\n",(0,i.jsx)(n.p,{children:"Virtual keys can be created and managed through the Conduit Web UI."}),"\n",(0,i.jsx)(n.h2,{id:"core-endpoints",children:"Core Endpoints"}),"\n",(0,i.jsx)(n.p,{children:"Conduit implements the following core endpoints:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Endpoint"}),(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/v1/chat/completions"})}),(0,i.jsx)(n.td,{children:"POST"}),(0,i.jsx)(n.td,{children:"Create chat completions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/v1/completions"})}),(0,i.jsx)(n.td,{children:"POST"}),(0,i.jsx)(n.td,{children:"Create text completions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/v1/embeddings"})}),(0,i.jsx)(n.td,{children:"POST"}),(0,i.jsx)(n.td,{children:"Generate text embeddings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/v1/models"})}),(0,i.jsx)(n.td,{children:"GET"}),(0,i.jsx)(n.td,{children:"List available models"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/v1/images/generations"})}),(0,i.jsx)(n.td,{children:"POST"}),(0,i.jsx)(n.td,{children:"Generate images (if configured)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,i.jsx)(n.p,{children:"API responses follow the OpenAI format:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "cmpl-abcdef123456",\n  "object": "chat.completion",\n  "created": 1677858242,\n  "model": "my-gpt4",\n  "choices": [\n    {\n      "message": {\n        "role": "assistant",\n        "content": "Hello! How can I help you today?"\n      },\n      "finish_reason": "stop",\n      "index": 0\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 10,\n    "completion_tokens": 8,\n    "total_tokens": 18\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"Conduit returns standard HTTP status codes and error responses:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": {\n    "message": "Invalid request",\n    "type": "invalid_request_error",\n    "param": "model",\n    "code": "model_not_found"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Common status codes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"200"}),": Success"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"400"}),": Bad request (client error)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"401"}),": Unauthorized (invalid or missing API key)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"403"}),": Forbidden (permissions issue)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"404"}),": Not found"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"429"}),": Too many requests (rate limit exceeded)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"500"}),": Server error"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-parameters",children:"Common Parameters"}),"\n",(0,i.jsx)(n.p,{children:"These parameters are supported across multiple endpoints:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"model"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The model to use (virtual model name)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"user"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"User identifier for tracking and rate limiting"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"temperature"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"Controls randomness (0-2)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"top_p"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"Controls diversity via nucleus sampling"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"n"})}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"Number of completions to generate"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"stream"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"Stream responses as they're generated"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,i.jsxs)(n.p,{children:["The API uses the ",(0,i.jsx)(n.code,{children:"/v1"})," prefix, aligned with the OpenAI API version. Future breaking changes may introduce new version prefixes."]}),"\n",(0,i.jsx)(n.h2,{id:"rate-limits",children:"Rate Limits"}),"\n",(0,i.jsxs)(n.p,{children:["Rate limits are applied based on the virtual key settings. When exceeded, the API returns a 429 status code with a ",(0,i.jsx)(n.code,{children:"Retry-After"})," header indicating when to retry."]}),"\n",(0,i.jsx)(n.h2,{id:"streaming-responses",children:"Streaming Responses"}),"\n",(0,i.jsx)(n.p,{children:"For streaming endpoints, responses follow the Server-Sent Events (SSE) format, with each event containing a chunk of the response."}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"chat-completions",children:"Chat Completions API"}),": Learn about the chat interface"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"embeddings",children:"Embeddings API"}),": Generate vector embeddings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"models",children:"Models API"}),": List and filter available models"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>o});var s=r(6540);const i={},t=s.createContext(i);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);