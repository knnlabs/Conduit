"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8158],{6232:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"monitoring/metrics-monitoring","title":"Metrics and Monitoring","description":"ConduitLLM provides comprehensive monitoring capabilities through Prometheus metrics, health checks, and distributed tracing to ensure reliable operation in production environments.","source":"@site/docs/monitoring/metrics-monitoring.md","sourceDirName":"monitoring","slug":"/monitoring/metrics-monitoring","permalink":"/Conduit/docs/monitoring/metrics-monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/knnlabs/Conduit/tree/main/website/docs/monitoring/metrics-monitoring.md","tags":[],"version":"current","frontMatter":{}}');var s=i(4848),t=i(8453);const a={},o="Metrics and Monitoring",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prometheus Metrics",id:"prometheus-metrics",level:2},{value:"Enabling Metrics",id:"enabling-metrics",level:3},{value:"Available Metrics",id:"available-metrics",level:3},{value:"Request Metrics",id:"request-metrics",level:4},{value:"Audio Metrics",id:"audio-metrics",level:4},{value:"System Metrics",id:"system-metrics",level:4},{value:"Prometheus Configuration",id:"prometheus-configuration",level:3},{value:"Grafana Dashboards",id:"grafana-dashboards",level:2},{value:"1. System Overview Dashboard",id:"1-system-overview-dashboard",level:3},{value:"2. Audio Services Dashboard",id:"2-audio-services-dashboard",level:3},{value:"3. Provider Health Dashboard",id:"3-provider-health-dashboard",level:3},{value:"Importing Dashboards",id:"importing-dashboards",level:3},{value:"Health Checks",id:"health-checks",level:2},{value:"System Health Endpoint",id:"system-health-endpoint",level:3},{value:"Liveness Check",id:"liveness-check",level:3},{value:"Provider Health",id:"provider-health",level:3},{value:"Distributed Tracing",id:"distributed-tracing",level:2},{value:"Correlation IDs",id:"correlation-ids",level:3},{value:"Accessing Trace Information",id:"accessing-trace-information",level:3},{value:"Structured Logging",id:"structured-logging",level:3},{value:"Performance Metrics",id:"performance-metrics",level:2},{value:"Enabling Performance Tracking",id:"enabling-performance-tracking",level:3},{value:"Performance Data Collection",id:"performance-data-collection",level:3},{value:"Accessing Performance Data",id:"accessing-performance-data",level:3},{value:"Alerting",id:"alerting",level:2},{value:"Prometheus Alerting Rules",id:"prometheus-alerting-rules",level:3},{value:"Webhook Notifications",id:"webhook-notifications",level:3},{value:"Custom Metrics",id:"custom-metrics",level:2},{value:"Adding Custom Metrics",id:"adding-custom-metrics",level:3},{value:"Exposing Business Metrics",id:"exposing-business-metrics",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Missing Metrics",id:"missing-metrics",level:3},{value:"High Cardinality",id:"high-cardinality",level:3},{value:"Performance Impact",id:"performance-impact",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"metrics-and-monitoring",children:"Metrics and Monitoring"})}),"\n",(0,s.jsx)(n.p,{children:"ConduitLLM provides comprehensive monitoring capabilities through Prometheus metrics, health checks, and distributed tracing to ensure reliable operation in production environments."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The monitoring system provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Metrics"}),": Prometheus-compatible metrics for all operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Health Checks"}),": Continuous monitoring of system and provider health"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed Tracing"}),": Request tracking across services with correlation IDs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Tracking"}),": Detailed latency and throughput measurements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cost Attribution"}),": Per-request cost tracking and reporting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom Dashboards"}),": Pre-built Grafana dashboards for visualization"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prometheus-metrics",children:"Prometheus Metrics"}),"\n",(0,s.jsx)(n.h3,{id:"enabling-metrics",children:"Enabling Metrics"}),"\n",(0,s.jsxs)(n.p,{children:["Metrics are exposed on the ",(0,s.jsx)(n.code,{children:"/metrics"})," endpoint when enabled:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "Monitoring": {\n    "Prometheus": {\n      "Enabled": true,\n      "Endpoint": "/metrics",\n      "IncludeDefaultMetrics": true\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Or via environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"CONDUIT_MONITORING_PROMETHEUS_ENABLED=true\nCONDUIT_MONITORING_PROMETHEUS_ENDPOINT=/metrics\n"})}),"\n",(0,s.jsx)(n.h3,{id:"available-metrics",children:"Available Metrics"}),"\n",(0,s.jsx)(n.h4,{id:"request-metrics",children:"Request Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-prometheus",children:'# Total requests by provider and model\nconduit_llm_requests_total{provider="openai",model="gpt-4",status="success"} 1234\n\n# Request duration histogram\nconduit_llm_request_duration_seconds_bucket{provider="openai",model="gpt-4",le="0.5"} 890\nconduit_llm_request_duration_seconds_bucket{provider="openai",model="gpt-4",le="1.0"} 1100\nconduit_llm_request_duration_seconds_bucket{provider="openai",model="gpt-4",le="2.0"} 1200\n\n# Active requests gauge\nconduit_llm_active_requests{provider="openai"} 5\n\n# Token usage\nconduit_llm_tokens_total{provider="openai",model="gpt-4",type="input"} 450000\nconduit_llm_tokens_total{provider="openai",model="gpt-4",type="output"} 125000\n'})}),"\n",(0,s.jsx)(n.h4,{id:"audio-metrics",children:"Audio Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-prometheus",children:'# Audio operations\nconduit_audio_operations_total{provider="openai",operation="transcription",status="success"} 850\nconduit_audio_operations_total{provider="googlecloud",operation="tts",status="success"} 1200\n\n# Audio duration processed\nconduit_audio_duration_seconds_total{provider="openai",operation="transcription"} 51000\n\n# Real-time session metrics\nconduit_realtime_sessions_active{provider="openai"} 3\nconduit_realtime_session_duration_seconds_bucket{provider="openai",le="60"} 45\nconduit_realtime_session_duration_seconds_bucket{provider="openai",le="300"} 120\n'})}),"\n",(0,s.jsx)(n.h4,{id:"system-metrics",children:"System Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-prometheus",children:'# Health check status\nconduit_health_check_status{check="database",status="healthy"} 1\nconduit_health_check_status{check="redis",status="healthy"} 1\nconduit_health_check_status{check="providers",status="degraded"} 1\n\n# Cache metrics\nconduit_cache_hits_total{cache="response"} 3400\nconduit_cache_misses_total{cache="response"} 1200\nconduit_cache_size_bytes{cache="response"} 52428800\n\n# Provider health\nconduit_provider_health{provider="openai",status="healthy"} 1\nconduit_provider_health{provider="anthropic",status="healthy"} 1\nconduit_provider_response_time_seconds{provider="openai",quantile="0.99"} 0.845\n'})}),"\n",(0,s.jsx)(n.h3,{id:"prometheus-configuration",children:"Prometheus Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Example ",(0,s.jsx)(n.code,{children:"prometheus.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nscrape_configs:\n  - job_name: 'conduit'\n    static_configs:\n      - targets: ['conduit-api:8080']\n    metrics_path: '/metrics'\n    scheme: 'http'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"grafana-dashboards",children:"Grafana Dashboards"}),"\n",(0,s.jsxs)(n.p,{children:["Pre-built dashboards are available in the ",(0,s.jsx)(n.code,{children:"docs/grafana-dashboards/"})," directory:"]}),"\n",(0,s.jsx)(n.h3,{id:"1-system-overview-dashboard",children:"1. System Overview Dashboard"}),"\n",(0,s.jsx)(n.p,{children:"Provides high-level system metrics:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Request rate and latency"}),"\n",(0,s.jsx)(n.li,{children:"Error rates by provider"}),"\n",(0,s.jsx)(n.li,{children:"Token usage and costs"}),"\n",(0,s.jsx)(n.li,{children:"Cache hit rates"}),"\n",(0,s.jsx)(n.li,{children:"Active connections"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-audio-services-dashboard",children:"2. Audio Services Dashboard"}),"\n",(0,s.jsx)(n.p,{children:"Specialized dashboard for audio operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Transcription and TTS volumes"}),"\n",(0,s.jsx)(n.li,{children:"Audio processing duration"}),"\n",(0,s.jsx)(n.li,{children:"Real-time session metrics"}),"\n",(0,s.jsx)(n.li,{children:"Provider-specific audio costs"}),"\n",(0,s.jsx)(n.li,{children:"Quality metrics (WER, latency)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-provider-health-dashboard",children:"3. Provider Health Dashboard"}),"\n",(0,s.jsx)(n.p,{children:"Monitors provider availability:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Health check status"}),"\n",(0,s.jsx)(n.li,{children:"Response times by provider"}),"\n",(0,s.jsx)(n.li,{children:"Error rates and types"}),"\n",(0,s.jsx)(n.li,{children:"Circuit breaker status"}),"\n",(0,s.jsx)(n.li,{children:"Failover events"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"importing-dashboards",children:"Importing Dashboards"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Import via Grafana API\ncurl -X POST http://grafana:3000/api/dashboards/db \\\n  -H "Authorization: Bearer $GRAFANA_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d @audio-metrics-dashboard.json\n'})}),"\n",(0,s.jsx)(n.h2,{id:"health-checks",children:"Health Checks"}),"\n",(0,s.jsx)(n.h3,{id:"system-health-endpoint",children:"System Health Endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /health/ready\n"})}),"\n",(0,s.jsx)(n.p,{children:"Response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": "Healthy",\n  "totalDuration": "00:00:00.0234567",\n  "entries": {\n    "database": {\n      "status": "Healthy",\n      "duration": "00:00:00.0123456"\n    },\n    "redis": {\n      "status": "Healthy",\n      "duration": "00:00:00.0034567"\n    },\n    "providers": {\n      "status": "Degraded",\n      "duration": "00:00:00.0076543",\n      "description": "1 provider unhealthy: anthropic"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"liveness-check",children:"Liveness Check"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /health/live\n"})}),"\n",(0,s.jsx)(n.p,{children:"Simple check that the service is running."}),"\n",(0,s.jsx)(n.h3,{id:"provider-health",children:"Provider Health"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/admin/providers/health\nX-Master-Key: your-master-key\n"})}),"\n",(0,s.jsx)(n.p,{children:"Detailed provider health information:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "providers": [\n    {\n      "name": "openai",\n      "status": "healthy",\n      "lastChecked": "2024-01-15T10:30:00Z",\n      "responseTime": 234,\n      "successRate": 0.998,\n      "services": {\n        "chat": "healthy",\n        "transcription": "healthy",\n        "tts": "healthy",\n        "realtime": "healthy"\n      }\n    },\n    {\n      "name": "anthropic",\n      "status": "unhealthy",\n      "lastChecked": "2024-01-15T10:30:00Z",\n      "error": "Connection timeout",\n      "consecutiveFailures": 3\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"distributed-tracing",children:"Distributed Tracing"}),"\n",(0,s.jsx)(n.h3,{id:"correlation-ids",children:"Correlation IDs"}),"\n",(0,s.jsx)(n.p,{children:"Every request is assigned a correlation ID for tracing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /v1/chat/completions\nX-Virtual-Key: your-key\nX-Correlation-Id: 550e8400-e29b-41d4-a716-446655440000\n"})}),"\n",(0,s.jsx)(n.p,{children:"The correlation ID is propagated through:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All internal service calls"}),"\n",(0,s.jsx)(n.li,{children:"Provider API requests"}),"\n",(0,s.jsx)(n.li,{children:"Log entries"}),"\n",(0,s.jsx)(n.li,{children:"Error responses"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"accessing-trace-information",children:"Accessing Trace Information"}),"\n",(0,s.jsx)(n.p,{children:"Response headers include trace information:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"HTTP/1.1 200 OK\nX-Correlation-Id: 550e8400-e29b-41d4-a716-446655440000\nX-Request-Duration-Ms: 845\nX-Provider-Used: openai\nX-Model-Used: gpt-4\nX-Cache-Hit: false\n"})}),"\n",(0,s.jsx)(n.h3,{id:"structured-logging",children:"Structured Logging"}),"\n",(0,s.jsx)(n.p,{children:"All logs include correlation ID and contextual information:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T10:30:45.123Z",\n  "level": "info",\n  "correlationId": "550e8400-e29b-41d4-a716-446655440000",\n  "message": "LLM request completed",\n  "provider": "openai",\n  "model": "gpt-4",\n  "duration": 845,\n  "inputTokens": 150,\n  "outputTokens": 200,\n  "cost": 0.0105\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,s.jsx)(n.h3,{id:"enabling-performance-tracking",children:"Enabling Performance Tracking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "PerformanceTracking": {\n    "Enabled": true,\n    "SampleRate": 1.0,\n    "DetailedMetrics": true,\n    "SlowRequestThreshold": 5000\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"performance-data-collection",children:"Performance Data Collection"}),"\n",(0,s.jsx)(n.p,{children:"Performance metrics are collected for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Overall request duration"}),"\n",(0,s.jsx)(n.li,{children:"Provider API latency"}),"\n",(0,s.jsx)(n.li,{children:"Token generation rate"}),"\n",(0,s.jsx)(n.li,{children:"Time to first token (streaming)"}),"\n",(0,s.jsx)(n.li,{children:"Queue wait time"}),"\n",(0,s.jsx)(n.li,{children:"Processing overhead"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"accessing-performance-data",children:"Accessing Performance Data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/admin/metrics/performance?startDate=2024-01-01&endDate=2024-01-15\nX-Master-Key: your-master-key\n"})}),"\n",(0,s.jsx)(n.p,{children:"Response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "summary": {\n    "totalRequests": 45000,\n    "averageLatency": 1234,\n    "p50Latency": 800,\n    "p95Latency": 2500,\n    "p99Latency": 4500\n  },\n  "byProvider": [\n    {\n      "provider": "openai",\n      "requests": 30000,\n      "averageLatency": 1100,\n      "errorRate": 0.002\n    }\n  ],\n  "byModel": [\n    {\n      "model": "gpt-4",\n      "requests": 15000,\n      "averageLatency": 1800,\n      "tokensPerSecond": 45.2\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"alerting",children:"Alerting"}),"\n",(0,s.jsx)(n.h3,{id:"prometheus-alerting-rules",children:"Prometheus Alerting Rules"}),"\n",(0,s.jsxs)(n.p,{children:["Example ",(0,s.jsx)(n.code,{children:"alerts.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'groups:\n  - name: conduit\n    rules:\n      - alert: HighErrorRate\n        expr: rate(conduit_llm_requests_total{status="error"}[5m]) > 0.05\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: "High error rate detected"\n          description: "Error rate is {{ $value }} for {{ $labels.provider }}"\n      \n      - alert: ProviderDown\n        expr: conduit_provider_health{status="unhealthy"} == 1\n        for: 2m\n        labels:\n          severity: critical\n        annotations:\n          summary: "Provider {{ $labels.provider }} is down"\n      \n      - alert: HighLatency\n        expr: histogram_quantile(0.95, conduit_llm_request_duration_seconds_bucket) > 5\n        for: 10m\n        labels:\n          severity: warning\n        annotations:\n          summary: "High latency detected"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"webhook-notifications",children:"Webhook Notifications"}),"\n",(0,s.jsx)(n.p,{children:"Configure webhook alerts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'POST /api/admin/alerts/webhooks\nX-Master-Key: your-master-key\n\n{\n  "url": "https://your-app.com/alerts",\n  "events": [\n    "provider.down",\n    "high.error.rate",\n    "quota.exceeded"\n  ],\n  "secret": "webhook-secret"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-metrics",children:"Custom Metrics"}),"\n",(0,s.jsx)(n.h3,{id:"adding-custom-metrics",children:"Adding Custom Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'// In your code\nservices.AddSingleton<IMetricsCollector, PrometheusMetricsCollector>();\n\n// Collect custom metric\n_metrics.IncrementCounter("custom_operation_total", \n    new[] { ("operation", "special"), ("status", "success") });\n\n_metrics.ObserveHistogram("custom_duration_seconds", \n    elapsedSeconds, \n    new[] { ("operation", "special") });\n'})}),"\n",(0,s.jsx)(n.h3,{id:"exposing-business-metrics",children:"Exposing Business Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'// Track business-specific metrics\n_metrics.SetGauge("active_premium_users", activePremiumUsers);\n_metrics.IncrementCounter("revenue_total", revenueAmount, \n    new[] { ("currency", "usd"), ("plan", "premium") });\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metric Naming"}),": Follow Prometheus naming conventions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Label Cardinality"}),": Keep label combinations under control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sampling"}),": Use sampling for high-volume metrics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retention"}),": Configure appropriate retention policies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Aggregation"}),": Pre-aggregate where possible"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Alerting"}),": Set up alerts for critical metrics"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"missing-metrics",children:"Missing Metrics"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Verify Prometheus is enabled in configuration"}),"\n",(0,s.jsx)(n.li,{children:"Check firewall rules for metrics endpoint"}),"\n",(0,s.jsx)(n.li,{children:"Ensure metrics are being collected (check logs)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"high-cardinality",children:"High Cardinality"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Review label usage"}),"\n",(0,s.jsx)(n.li,{children:"Implement sampling for detailed metrics"}),"\n",(0,s.jsx)(n.li,{children:"Use recording rules for aggregation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-impact",children:"Performance Impact"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Adjust sampling rates"}),"\n",(0,s.jsx)(n.li,{children:"Disable detailed metrics if needed"}),"\n",(0,s.jsx)(n.li,{children:"Use separate metrics instance"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/Conduit/docs/monitoring/health-checks",children:"Health Checks"})," - Detailed health check configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/Conduit/docs/monitoring/production-deployment",children:"Production Deployment"})," - Deploy monitoring stack"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/Conduit/docs/troubleshooting/common-issues",children:"Troubleshooting Guide"})," - Common monitoring issues"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);