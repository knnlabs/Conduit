"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7003],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},9817:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"deployment/rabbitmq-setup","title":"RabbitMQ Setup","description":"Configure RabbitMQ for high-throughput event processing in Conduit","source":"@site/docs/deployment/rabbitmq-setup.md","sourceDirName":"deployment","slug":"/deployment/rabbitmq-setup","permalink":"/Conduit/docs/deployment/rabbitmq-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/knnlabs/Conduit/tree/main/website/docs/deployment/rabbitmq-setup.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"RabbitMQ Setup","description":"Configure RabbitMQ for high-throughput event processing in Conduit"}}');var r=i(4848),s=i(8453);const a={sidebar_position:4,title:"RabbitMQ Setup",description:"Configure RabbitMQ for high-throughput event processing in Conduit"},o="RabbitMQ Setup",c={},l=[{value:"Why RabbitMQ?",id:"why-rabbitmq",level:2},{value:"RabbitMQ vs In-Memory",id:"rabbitmq-vs-in-memory",level:2},{value:"Installation Options",id:"installation-options",level:2},{value:"Option 1: Docker Compose (Recommended for Development)",id:"option-1-docker-compose-recommended-for-development",level:3},{value:"Option 2: Kubernetes Deployment",id:"option-2-kubernetes-deployment",level:3},{value:"Option 3: Managed RabbitMQ Services",id:"option-3-managed-rabbitmq-services",level:3},{value:"Production Configuration",id:"production-configuration",level:2},{value:"RabbitMQ Configuration File",id:"rabbitmq-configuration-file",level:3},{value:"Conduit RabbitMQ Configuration",id:"conduit-rabbitmq-configuration",level:3},{value:"Queue Architecture",id:"queue-architecture",level:2},{value:"Queue Structure",id:"queue-structure",level:3},{value:"Queue-Specific Configuration",id:"queue-specific-configuration",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Connection Pooling",id:"connection-pooling",level:3},{value:"Circuit Breaker Configuration",id:"circuit-breaker-configuration",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Monitoring and Health Checks",id:"monitoring-and-health-checks",level:2},{value:"Health Check Configuration",id:"health-check-configuration",level:3},{value:"Key Metrics to Monitor",id:"key-metrics-to-monitor",level:3},{value:"Prometheus Metrics",id:"prometheus-metrics",level:3},{value:"Scaling Strategies",id:"scaling-strategies",level:2},{value:"Vertical Scaling",id:"vertical-scaling",level:3},{value:"Horizontal Scaling",id:"horizontal-scaling",level:3},{value:"RabbitMQ Clustering",id:"rabbitmq-clustering",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Logging",id:"debug-logging",level:3},{value:"Security Configuration",id:"security-configuration",level:2},{value:"Authentication and Authorization",id:"authentication-and-authorization",level:3},{value:"TLS/SSL Configuration",id:"tlsssl-configuration",level:3},{value:"Backup and Recovery",id:"backup-and-recovery",level:2},{value:"Configuration Backup",id:"configuration-backup",level:3},{value:"Data Backup",id:"data-backup",level:3},{value:"Migration from In-Memory",id:"migration-from-in-memory",level:2},{value:"Automatic Detection",id:"automatic-detection",level:3},{value:"Migration Steps",id:"migration-steps",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rabbitmq-setup",children:"RabbitMQ Setup"})}),"\n",(0,r.jsx)(n.p,{children:"RabbitMQ is essential for Conduit's event-driven architecture, enabling horizontal scaling and high-throughput processing of 1,000+ async tasks per minute."}),"\n",(0,r.jsx)(n.h2,{id:"why-rabbitmq",children:"Why RabbitMQ?"}),"\n",(0,r.jsx)(n.p,{children:"Conduit uses RabbitMQ for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event Processing"}),": Domain events for data consistency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Async Task Processing"}),": Image/video generation, webhook delivery"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Horizontal Scaling"}),": Multiple service instances coordination"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reliability"}),": Message durability and delivery guarantees"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rabbitmq-vs-in-memory",children:"RabbitMQ vs In-Memory"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"In-Memory"}),(0,r.jsx)(n.th,{children:"RabbitMQ"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Deployment"})}),(0,r.jsx)(n.td,{children:"Single instance only"}),(0,r.jsx)(n.td,{children:"Multi-instance"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Throughput"})}),(0,r.jsx)(n.td,{children:"Limited"}),(0,r.jsx)(n.td,{children:"1,000+ tasks/minute"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Reliability"})}),(0,r.jsx)(n.td,{children:"Lost on restart"}),(0,r.jsx)(n.td,{children:"Persistent"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Scaling"})}),(0,r.jsx)(n.td,{children:"Vertical only"}),(0,r.jsx)(n.td,{children:"Horizontal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Use Case"})}),(0,r.jsx)(n.td,{children:"Development/Testing"}),(0,r.jsx)(n.td,{children:"Production"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"installation-options",children:"Installation Options"}),"\n",(0,r.jsx)(n.h3,{id:"option-1-docker-compose-recommended-for-development",children:"Option 1: Docker Compose (Recommended for Development)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\nservices:\n  rabbitmq:\n    image: rabbitmq:3.12-management\n    container_name: conduit-rabbitmq\n    ports:\n      - "5672:5672"    # AMQP port\n      - "15672:15672"  # Management UI\n    environment:\n      RABBITMQ_DEFAULT_USER: conduit\n      RABBITMQ_DEFAULT_PASS: conduit-password\n      RABBITMQ_DEFAULT_VHOST: /\n    volumes:\n      - rabbitmq_data:/var/lib/rabbitmq\n      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf\n    healthcheck:\n      test: ["CMD", "rabbitmq-diagnostics", "ping"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\nvolumes:\n  rabbitmq_data:\n'})}),"\n",(0,r.jsx)(n.h3,{id:"option-2-kubernetes-deployment",children:"Option 2: Kubernetes Deployment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# kubernetes/rabbitmq-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  namespace: conduit-production\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: rabbitmq\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.12-management\n        ports:\n        - containerPort: 5672\n        - containerPort: 15672\n        env:\n        - name: RABBITMQ_DEFAULT_USER\n          value: "conduit"\n        - name: RABBITMQ_DEFAULT_PASS\n          valueFrom:\n            secretKeyRef:\n              name: rabbitmq-secret\n              key: password\n        volumeMounts:\n        - name: rabbitmq-config\n          mountPath: /etc/rabbitmq/rabbitmq.conf\n          subPath: rabbitmq.conf\n        - name: rabbitmq-data\n          mountPath: /var/lib/rabbitmq\n        resources:\n          requests:\n            memory: "512Mi"\n            cpu: "250m"\n          limits:\n            memory: "1Gi"\n            cpu: "500m"\n      volumes:\n      - name: rabbitmq-config\n        configMap:\n          name: rabbitmq-config\n      - name: rabbitmq-data\n        persistentVolumeClaim:\n          claimName: rabbitmq-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq-service\n  namespace: conduit-production\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n  - name: amqp\n    port: 5672\n    targetPort: 5672\n  - name: management\n    port: 15672\n    targetPort: 15672\n  type: ClusterIP\n'})}),"\n",(0,r.jsx)(n.h3,{id:"option-3-managed-rabbitmq-services",children:"Option 3: Managed RabbitMQ Services"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"AWS Amazon MQ:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# AWS CLI command to create managed RabbitMQ\naws mq create-broker \\\n  --broker-name conduit-production \\\n  --deployment-mode SINGLE_INSTANCE \\\n  --engine-type RABBITMQ \\\n  --engine-version 3.12.13 \\\n  --host-instance-type mq.t3.micro \\\n  --users Username=conduit,Password=secure-password\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Google Cloud Pub/Sub Alternative:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create Pub/Sub topics for event processing\ngcloud pubsub topics create conduit-events\ngcloud pubsub subscriptions create conduit-subscription --topic=conduit-events\n"})}),"\n",(0,r.jsx)(n.h2,{id:"production-configuration",children:"Production Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"rabbitmq-configuration-file",children:"RabbitMQ Configuration File"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"# rabbitmq.conf - Production optimized settings\n# Memory and disk limits\nvm_memory_high_watermark.relative = 0.6\ndisk_free_limit.relative = 1.0\n\n# Connection limits\nnum_acceptors.tcp = 10\nhandshake_timeout = 10000\nheartbeat = 60\n\n# Queue settings\ndefault_user = conduit\ndefault_pass = secure-password\ndefault_vhost = /\ndefault_user_tags.administrator = true\n\n# Logging\nlog.console = true\nlog.console.level = info\n\n# Clustering (for multi-node setup)\ncluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config\ncluster_formation.classic_config.nodes.1 = rabbit@rabbitmq-1\ncluster_formation.classic_config.nodes.2 = rabbit@rabbitmq-2\ncluster_formation.classic_config.nodes.3 = rabbit@rabbitmq-3\n\n# Performance tuning\nchannel_max = 2048\nframe_max = 131072\nheartbeat = 60\n"})}),"\n",(0,r.jsx)(n.h3,{id:"conduit-rabbitmq-configuration",children:"Conduit RabbitMQ Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Core API and Admin API RabbitMQ Configuration\nexport CONDUITLLM__RABBITMQ__HOST=rabbitmq-service\nexport CONDUITLLM__RABBITMQ__PORT=5672\nexport CONDUITLLM__RABBITMQ__USERNAME=conduit\nexport CONDUITLLM__RABBITMQ__PASSWORD=secure-password\nexport CONDUITLLM__RABBITMQ__VHOST=/\n\n# High-throughput settings (1,000+ tasks/minute)\nexport CONDUITLLM__RABBITMQ__PREFETCHCOUNT=25\nexport CONDUITLLM__RABBITMQ__PARTITIONCOUNT=30\nexport CONDUITLLM__RABBITMQ__CONCURRENTMESSAGELIMIT=50\n\n# Connection pooling\nexport CONDUITLLM__RABBITMQ__MAXCONNECTIONS=5\nexport CONDUITLLM__RABBITMQ__MINCONNECTIONS=2\n\n# Reliability settings\nexport CONDUITLLM__RABBITMQ__REQUESTEDHEARTBEAT=30\nexport CONDUITLLM__RABBITMQ__PUBLISHERCONFIRMATION=true\n"})}),"\n",(0,r.jsx)(n.h2,{id:"queue-architecture",children:"Queue Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"queue-structure",children:"Queue Structure"}),"\n",(0,r.jsx)(n.p,{children:"Conduit creates the following queues automatically:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Exchanges:\n\u251c\u2500\u2500 conduit.domain-events (Topic)\n\u251c\u2500\u2500 conduit.webhook-delivery (Direct) \n\u251c\u2500\u2500 conduit.image-generation (Direct)\n\u251c\u2500\u2500 conduit.video-generation (Direct)\n\u2514\u2500\u2500 conduit.audio-processing (Direct)\n\nQueues:\n\u251c\u2500\u2500 conduit.virtual-key-events (Partitioned: 30 partitions)\n\u251c\u2500\u2500 conduit.provider-events (Partitioned: 10 partitions)\n\u251c\u2500\u2500 conduit.spend-updates (Partitioned: 30 partitions)\n\u251c\u2500\u2500 conduit.webhook-delivery (Quorum queue)\n\u251c\u2500\u2500 conduit.image-generation (Standard)\n\u251c\u2500\u2500 conduit.video-generation (Standard)\n\u2514\u2500\u2500 conduit.audio-processing (Standard)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"queue-specific-configuration",children:"Queue-Specific Configuration"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Webhook Delivery Queue:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# High-throughput webhook configuration\nCONDUITLLM__RABBITMQ__WEBHOOK__PREFETCHCOUNT=100\nCONDUITLLM__RABBITMQ__WEBHOOK__CONCURRENTMESSAGELIMIT=75\nCONDUITLLM__RABBITMQ__WEBHOOK__BATCHSIZE=100\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Image/Video Generation Queues:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Media generation configuration\nCONDUITLLM__RABBITMQ__MEDIA__PREFETCHCOUNT=10\nCONDUITLLM__RABBITMQ__MEDIA__CONCURRENTMESSAGELIMIT=5\nCONDUITLLM__RABBITMQ__MEDIA__CIRCUITBREAKER=true\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Spend Update Queue:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Ordered spend processing\nCONDUITLLM__RABBITMQ__SPEND__PREFETCHCOUNT=10\nCONDUITLLM__RABBITMQ__SPEND__CONCURRENTMESSAGELIMIT=1\nCONDUITLLM__RABBITMQ__SPEND__ORDEREDPROCESSING=true\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Conduit automatically configures connection pooling\nservices.AddMassTransit(x =>\n{\n    x.UsingRabbitMq((context, cfg) =>\n    {\n        cfg.Host(host, "/", h =>\n        {\n            h.Username(username);\n            h.Password(password);\n            h.RequestedHeartbeat(TimeSpan.FromSeconds(30));\n            h.RequestedConnectionTimeout(TimeSpan.FromSeconds(30));\n            h.UseCluster(c =>\n            {\n                c.Node("rabbitmq-1");\n                c.Node("rabbitmq-2");\n                c.Node("rabbitmq-3");\n            });\n        });\n        \n        cfg.ConcurrentMessageLimit = 50;\n        cfg.PrefetchCount = 25;\n    });\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"circuit-breaker-configuration",children:"Circuit Breaker Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Circuit breaker settings\nCONDUITLLM__RABBITMQ__CIRCUITBREAKER__ENABLED=true\nCONDUITLLM__RABBITMQ__CIRCUITBREAKER__THRESHOLD=0.15\nCONDUITLLM__RABBITMQ__CIRCUITBREAKER__DURATION=60000\nCONDUITLLM__RABBITMQ__CIRCUITBREAKER__SAMPLING=10000\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Rate limiting per consumer type\nCONDUITLLM__RABBITMQ__RATELIMIT__WEBHOOK=100     # 100 msg/sec\nCONDUITLLM__RABBITMQ__RATELIMIT__MEDIA=10        # 10 msg/sec\nCONDUITLLM__RABBITMQ__RATELIMIT__SPEND=50        # 50 msg/sec\n"})}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-and-health-checks",children:"Monitoring and Health Checks"}),"\n",(0,r.jsx)(n.h3,{id:"health-check-configuration",children:"Health Check Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// Health checks for RabbitMQ\nservices.AddHealthChecks()\n    .AddRabbitMQ(connectionString: rabbitMqConnection, \n                 name: "rabbitmq",\n                 failureStatus: HealthStatus.Unhealthy,\n                 tags: new[] { "messaging", "rabbitmq" });\n'})}),"\n",(0,r.jsx)(n.h3,{id:"key-metrics-to-monitor",children:"Key Metrics to Monitor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Queue depth monitoring\nrabbitmqctl list_queues name messages consumers\n\n# Connection monitoring  \nrabbitmqctl list_connections name state\n\n# Memory usage\nrabbitmqctl status | grep -i memory\n\n# Performance metrics\nrabbitmqctl list_queues name message_stats\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prometheus-metrics",children:"Prometheus Metrics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# RabbitMQ Prometheus Plugin\nrabbitmq-plugins enable rabbitmq_prometheus\n\n# Metrics endpoint available at:\n# http://rabbitmq:15692/metrics\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Metrics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rabbitmq_queue_messages"})," - Queue depth"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rabbitmq_queue_messages_ready"})," - Ready messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rabbitmq_queue_messages_unacknowledged"})," - Processing messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rabbitmq_connections"})," - Active connections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rabbitmq_channels"})," - Active channels"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"scaling-strategies",children:"Scaling Strategies"}),"\n",(0,r.jsx)(n.h3,{id:"vertical-scaling",children:"Vertical Scaling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Increase RabbitMQ resources\nresources:\n  requests:\n    memory: "1Gi"\n    cpu: "500m"\n  limits:\n    memory: "2Gi"\n    cpu: "1000m"\n\n# Increase connection limits\nCONDUITLLM__RABBITMQ__MAXCONNECTIONS=10\nCONDUITLLM__RABBITMQ__CONCURRENTMESSAGELIMIT=100\n'})}),"\n",(0,r.jsx)(n.h3,{id:"horizontal-scaling",children:"Horizontal Scaling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Scale Conduit service replicas\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: conduit-core-api\nspec:\n  replicas: 5  # Increased from 3\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rabbitmq-clustering",children:"RabbitMQ Clustering"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Multi-node RabbitMQ cluster\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: rabbitmq-cluster\nspec:\n  replicas: 3\n  serviceName: rabbitmq-cluster\n  template:\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.12-management\n        env:\n        - name: RABBITMQ_ERLANG_COOKIE\n          value: "rabbitmq-cluster-cookie"\n        - name: RABBITMQ_USE_LONGNAME\n          value: "true"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Queue Buildup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check queue consumers\nrabbitmqctl list_queues name consumers\n\n# Purge queue if needed (development only)\nrabbitmqctl purge_queue conduit.webhook-delivery\n\n# Increase consumer count\nexport CONDUITLLM__RABBITMQ__CONCURRENTMESSAGELIMIT=100\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connection Issues:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check RabbitMQ logs\ndocker logs conduit-rabbitmq\n\n# Verify connectivity\ntelnet rabbitmq-host 5672\n\n# Check authentication\nrabbitmqctl authenticate_user conduit password\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Issues:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check memory usage\nrabbitmqctl status | grep -A5 -B5 memory\n\n# Monitor message rates\nrabbitmqctl list_queues name message_stats\n\n# Check connection limits\nrabbitmqctl list_connections name state\n"})}),"\n",(0,r.jsx)(n.h3,{id:"debug-logging",children:"Debug Logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable debug logging in Conduit\nexport CONDUITLLM__LOGGING__LOGLEVEL=Debug\n\n# Enable RabbitMQ debug logging\nrabbitmqctl set_log_level debug\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"authentication-and-authorization",children:"Authentication and Authorization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create dedicated user for Conduit\nrabbitmqctl add_user conduit secure-password\nrabbitmqctl set_user_tags conduit administrator\nrabbitmqctl set_permissions -p / conduit ".*" ".*" ".*"\n\n# Remove default guest user\nrabbitmqctl delete_user guest\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tlsssl-configuration",children:"TLS/SSL Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable TLS in RabbitMQ\nexport CONDUITLLM__RABBITMQ__SSL__ENABLED=true\nexport CONDUITLLM__RABBITMQ__SSL__SERVERNAME=rabbitmq.yourdomain.com\nexport CONDUITLLM__RABBITMQ__SSL__CERTIFICATEPATH=/etc/ssl/certs/rabbitmq.crt\nexport CONDUITLLM__RABBITMQ__SSL__CERTIFICATEPASSWORD=cert-password\n"})}),"\n",(0,r.jsx)(n.h2,{id:"backup-and-recovery",children:"Backup and Recovery"}),"\n",(0,r.jsx)(n.h3,{id:"configuration-backup",children:"Configuration Backup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Export RabbitMQ definitions\nrabbitmqctl export_definitions backup.json\n\n# Restore definitions\nrabbitmqctl import_definitions backup.json\n"})}),"\n",(0,r.jsx)(n.h3,{id:"data-backup",children:"Data Backup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Backup RabbitMQ data directory\ntar -czf rabbitmq-backup-$(date +%Y%m%d).tar.gz /var/lib/rabbitmq/\n\n# Restore from backup\ntar -xzf rabbitmq-backup-20240101.tar.gz -C /\n"})}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-in-memory",children:"Migration from In-Memory"}),"\n",(0,r.jsx)(n.h3,{id:"automatic-detection",children:"Automatic Detection"}),"\n",(0,r.jsx)(n.p,{children:"Conduit automatically detects RabbitMQ configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# When RabbitMQ is configured, Conduit switches automatically\n[Conduit] Event bus configured with RabbitMQ transport (multi-instance mode)\n\n# When not configured, uses in-memory\n[Conduit] Event bus configured with in-memory transport (single-instance mode)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"migration-steps",children:"Migration Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deploy RabbitMQ"})," using one of the installation options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Configuration"})," with RabbitMQ connection details"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Restart Services"})," - Conduit will automatically detect and use RabbitMQ"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Verify Operation"})," - Check logs for successful RabbitMQ connection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor Performance"})," - Ensure queues are processing correctly"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scaling Configuration"}),": Learn about ",(0,r.jsx)(n.a,{href:"scaling-configuration",children:"advanced scaling strategies"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring"}),": Set up ",(0,r.jsx)(n.a,{href:"monitoring-health",children:"comprehensive monitoring"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production Deployment"}),": Complete ",(0,r.jsx)(n.a,{href:"production-deployment",children:"production setup"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Tuning"}),": Optimize for your specific workload"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);