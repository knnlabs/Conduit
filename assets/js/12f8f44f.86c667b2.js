"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{8115:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"media/image-generation","title":"Image Generation","description":"Generate high-quality images from text prompts using OpenAI DALL-E, MiniMax, and Replicate","source":"@site/docs/media/image-generation.md","sourceDirName":"media","slug":"/media/image-generation","permalink":"/Conduit/docs/media/image-generation","draft":false,"unlisted":false,"editUrl":"https://github.com/knnlabs/Conduit/tree/main/website/docs/media/image-generation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Image Generation","description":"Generate high-quality images from text prompts using OpenAI DALL-E, MiniMax, and Replicate"},"sidebar":"docsSidebar","previous":{"title":"Real-Time Audio","permalink":"/Conduit/docs/audio/real-time-audio"},"next":{"title":"Video Generation","permalink":"/Conduit/docs/media/video-generation"}}');var a=i(4848),s=i(8453);const r={sidebar_position:2,title:"Image Generation",description:"Generate high-quality images from text prompts using OpenAI DALL-E, MiniMax, and Replicate"},o="Image Generation",l={},d=[{value:"Quick Start",id:"quick-start",level:2},{value:"Basic Image Generation",id:"basic-image-generation",level:3},{value:"Multiple Image Generation",id:"multiple-image-generation",level:3},{value:"Supported Models and Providers",id:"supported-models-and-providers",level:2},{value:"OpenAI DALL-E",id:"openai-dall-e",level:3},{value:"MiniMax Image Generation",id:"minimax-image-generation",level:3},{value:"Replicate Models",id:"replicate-models",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Error Handling",id:"common-error-handling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Prompt Engineering",id:"prompt-engineering",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Limitations",id:"limitations",level:2},{value:"What&#39;s NOT Supported",id:"whats-not-supported",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"image-generation",children:"Image Generation"})}),"\n",(0,a.jsxs)(n.p,{children:["Conduit provides image generation capabilities through the standard ",(0,a.jsx)(n.code,{children:"/v1/images/generations"})," endpoint, supporting OpenAI DALL-E, MiniMax, and Replicate models with OpenAI-compatible API format."]}),"\n",(0,a.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,a.jsx)(n.h3,{id:"basic-image-generation",children:"Basic Image Generation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: 'condt_your_virtual_key',\n  baseURL: 'https://api.conduit.yourdomain.com/v1'\n});\n\nconst response = await openai.images.generate({\n  model: 'dall-e-3',\n  prompt: 'A futuristic city skyline at sunset with flying cars and neon lights',\n  size: '1024x1024',\n  quality: 'hd',\n  n: 1\n});\n\nconsole.log('Generated image URL:', response.data[0].url);\nconsole.log('Revised prompt:', response.data[0].revised_prompt);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"multiple-image-generation",children:"Multiple Image Generation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const response = await openai.images.generate({\n  model: 'dall-e-2',\n  prompt: 'A cute robot playing with a cat in a garden',\n  size: '512x512',\n  n: 4 // Generate 4 variations\n});\n\nresponse.data.forEach((image, index) => {\n  console.log(`Image ${index + 1}: ${image.url}`);\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"supported-models-and-providers",children:"Supported Models and Providers"}),"\n",(0,a.jsx)(n.h3,{id:"openai-dall-e",children:"OpenAI DALL-E"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Models: ",(0,a.jsx)(n.code,{children:"dall-e-2"}),", ",(0,a.jsx)(n.code,{children:"dall-e-3"})]})}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Model"}),(0,a.jsx)(n.th,{children:"Max Resolution"}),(0,a.jsx)(n.th,{children:"Quality Options"}),(0,a.jsx)(n.th,{children:"Style Control"}),(0,a.jsx)(n.th,{children:"Notes"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"DALL-E 3"})}),(0,a.jsx)(n.td,{children:"1024x1024"}),(0,a.jsx)(n.td,{children:"Standard, HD"}),(0,a.jsx)(n.td,{children:"Natural, Vivid"}),(0,a.jsx)(n.td,{children:"Only n=1 supported"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"DALL-E 2"})}),(0,a.jsx)(n.td,{children:"1024x1024"}),(0,a.jsx)(n.td,{children:"Standard"}),(0,a.jsx)(n.td,{children:"None"}),(0,a.jsx)(n.td,{children:"Multiple variations supported"})]})]})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// DALL-E 3 with quality and style control\nconst dalleImage = await openai.images.generate({\n  model: 'dall-e-3',\n  prompt: 'A magical forest with glowing mushrooms and fairy lights',\n  size: '1024x1024',\n  quality: 'hd',      // 'standard' or 'hd'\n  style: 'vivid',     // 'natural' or 'vivid'\n  n: 1                // DALL-E 3 supports only n=1\n});\n\n// DALL-E 2 for multiple variations\nconst dalle2Images = await openai.images.generate({\n  model: 'dall-e-2',\n  prompt: 'A serene mountain landscape with a crystal-clear lake',\n  size: '1024x1024',\n  n: 4 // Multiple variations supported\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"DALL-E Features:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Prompt Enhancement"}),": DALL-E 3 automatically improves prompts"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Safety Filtering"}),": Built-in content policy enforcement"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"High Resolution"}),": Up to 1024x1024 pixels"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Style Control"}),": Natural vs. vivid styles (DALL-E 3)"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"minimax-image-generation",children:"MiniMax Image Generation"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.strong,{children:["Model: ",(0,a.jsx)(n.code,{children:"minimax-image"})," (alias for ",(0,a.jsx)(n.code,{children:"image-01"}),")"]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const minimaxImage = await openai.images.generate({\n  model: 'minimax-image',\n  prompt: 'A cyberpunk street scene with neon signs and rain reflections',\n  size: '1024x1024'\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Available Aspect Ratios:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"1:1 (square)"}),"\n",(0,a.jsx)(n.li,{children:"16:9 (landscape)"}),"\n",(0,a.jsx)(n.li,{children:"9:16 (portrait)"}),"\n",(0,a.jsx)(n.li,{children:"4:3 (standard)"}),"\n",(0,a.jsx)(n.li,{children:"3:4 (portrait)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Features:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Fast generation (30-60 seconds)"}),"\n",(0,a.jsx)(n.li,{children:"Cost-effective pricing"}),"\n",(0,a.jsx)(n.li,{children:"Good quality-to-price ratio"}),"\n",(0,a.jsx)(n.li,{children:"Multiple aspect ratios"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"replicate-models",children:"Replicate Models"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Models: Various community and official models"})}),"\n",(0,a.jsx)(n.p,{children:"Replicate provides access to a wide variety of community-hosted models. Specify the full model name including the owner."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Example with a Replicate model\nconst replicateImage = await openai.images.generate({\n  model: 'stability-ai/stable-diffusion',\n  prompt: 'A portrait of a wise old wizard with a long beard and mystical robes',\n  size: '1024x1024'\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Features:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Community models"}),": Access to various open-source models"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Async processing"}),": Built-in polling for completion"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Variable pricing"}),": Depends on the specific model used"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Extensive catalog"}),": Hundreds of available models"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsx)(n.h3,{id:"common-error-handling",children:"Common Error Handling"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"try {\n  const response = await openai.images.generate({\n    model: 'dall-e-3',\n    prompt: 'A beautiful landscape',\n    size: '1024x1024'\n  });\n  \n  console.log('Image generated:', response.data[0].url);\n} catch (error) {\n  console.error('Generation failed:', error.message);\n  \n  // Handle specific error types\n  if (error.code === 'content_policy_violation') {\n    console.log('Prompt violates content policy');\n  } else if (error.code === 'rate_limit_exceeded') {\n    console.log('Rate limit exceeded, try again later');\n  } else if (error.code === 'insufficient_quota') {\n    console.log('Insufficient quota for this model');\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"prompt-engineering",children:"Prompt Engineering"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Good prompts for image generation\nconst goodPrompts = [\n  'A professional headshot of a business executive in modern office lighting',\n  'Product photography of a smartphone on white background with studio lighting',\n  'A serene landscape with mountains reflected in a crystal-clear lake at sunset',\n  'Modern minimalist interior design with natural lighting and clean lines'\n];\n\n// Tips for better results:\n// 1. Be specific about style and composition\n// 2. Include lighting conditions\n// 3. Mention quality descriptors (professional, high-quality, detailed)\n// 4. Keep prompts focused and clear\n// 5. Avoid overly complex scenes\n"})}),"\n",(0,a.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Use appropriate models for different use cases\nconst configurations = {\n  // Fast generation for testing\n  testing: {\n    model: 'dall-e-2',\n    size: '512x512',\n    quality: 'standard'\n  },\n  \n  // Balanced quality and speed\n  production: {\n    model: 'dall-e-3',\n    size: '1024x1024',\n    quality: 'standard'\n  },\n  \n  // Maximum quality\n  premium: {\n    model: 'dall-e-3',\n    size: '1024x1024',\n    quality: 'hd',\n    style: 'natural'\n  },\n  \n  // Cost-effective option\n  budget: {\n    model: 'minimax-image',\n    size: '1024x1024'\n  }\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,a.jsx)(n.h3,{id:"whats-not-supported",children:"What's NOT Supported"}),"\n",(0,a.jsxs)(n.p,{children:["Conduit's image generation currently supports only basic text-to-image generation. The following features are ",(0,a.jsx)(n.strong,{children:"not implemented"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Image editing"})," (",(0,a.jsx)(n.code,{children:"/v1/images/edits"}),") - inpainting and outpainting"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Image variations"})," (",(0,a.jsx)(n.code,{children:"/v1/images/variations"}),") - generating variations of existing images"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Image-to-image"})," transformations"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Async image generation endpoints"})," - only synchronous generation is available"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Only the standard ",(0,a.jsx)(n.code,{children:"/v1/images/generations"})," endpoint is implemented."]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Video Generation"}),": Explore ",(0,a.jsx)(n.a,{href:"video-generation",children:"video generation capabilities"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Admin API"}),": Manage providers and virtual keys via ",(0,a.jsx)(n.a,{href:"../admin/admin-api-overview",children:"Admin API"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);