{
  "openapi": "3.0.4",
  "info": {
    "title": "ConduitLLM Admin API",
    "description": "Administrative API for ConduitLLM",
    "contact": {
      "name": "ConduitLLM Team"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Analytics/logs": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets paginated request logs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number (1-based)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Optional filter by start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Optional filter by end date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Optional filter by model",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualKeyId",
            "in": "query",
            "description": "Optional filter by virtual key ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Optional filter by status code",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.LogRequestDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.LogRequestDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.LogRequestDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/logs/{id}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets a single log entry by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the log to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.LogRequestDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.LogRequestDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.LogRequestDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/logs/models": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets a list of distinct model names from request logs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/costs/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets cost dashboard summary data",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "The timeframe for the summary (daily, weekly, monthly)",
            "schema": {
              "type": "string",
              "default": "daily"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the summary",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the summary",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostDashboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostDashboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostDashboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/costs/trends": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets cost trend data",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "The period for the trend (daily, weekly, monthly)",
            "schema": {
              "type": "string",
              "default": "daily"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the trend",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the trend",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostTrendDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostTrendDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostTrendDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/costs/models": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets costs grouped by model",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "topN",
            "in": "query",
            "description": "Number of top models to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.ModelCostBreakdownDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.ModelCostBreakdownDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.ModelCostBreakdownDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/costs/virtualkeys": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets costs grouped by virtual key",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "topN",
            "in": "query",
            "description": "Number of top virtual keys to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostBreakdownDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostBreakdownDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostBreakdownDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets comprehensive analytics summary",
        "parameters": [
          {
            "name": "timeframe",
            "in": "query",
            "description": "The timeframe for the summary (daily, weekly, monthly)",
            "schema": {
              "type": "string",
              "default": "daily"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the summary",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the summary",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.AnalyticsSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.AnalyticsSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.AnalyticsSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/virtualkeys/{virtualKeyId}/usage": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets usage statistics for a specific virtual key",
        "parameters": [
          {
            "name": "virtualKeyId",
            "in": "path",
            "description": "The virtual key ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the analysis",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UsageStatisticsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UsageStatisticsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UsageStatisticsDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/export": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Exports analytics data",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Export format (csv, json)",
            "schema": {
              "type": "string",
              "default": "csv"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the export",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the export",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Optional model filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualKeyId",
            "in": "query",
            "description": "Optional virtual key filter",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Analytics/metrics/cache": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets analytics cache metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/metrics/operations": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Gets analytics operation performance metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Analytics/cache/invalidate": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Invalidates analytics cache",
        "parameters": [
          {
            "name": "reason",
            "in": "query",
            "description": "Reason for cache invalidation",
            "schema": {
              "type": "string",
              "default": "Manual invalidation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admin/auth/ephemeral-master-key": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate an ephemeral master key for Admin API authentication",
        "responses": {
          "200": {
            "description": "Ephemeral master key generated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.EphemeralMasterKeyResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.EphemeralMasterKeyResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.EphemeralMasterKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed - master key required",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/batch-spending/flush": {
      "post": {
        "tags": [
          "BatchSpending"
        ],
        "summary": "Triggers immediate flushing of all pending batch spend updates.\n\nThis endpoint publishes a BatchSpendFlushRequestedEvent which is consumed by the Core API\nto immediately process all queued spending charges instead of waiting for the scheduled\nbatch interval. This is essential for:\n\n- Integration testing (deterministic billing verification)\n- Administrative operations (manual reconciliation)\n- Maintenance scenarios (pre-deployment charge processing)\n- Emergency operations (immediate financial updates)\n\nThe operation is asynchronous and event-driven for proper architectural decoupling.",
        "parameters": [
          {
            "name": "reason",
            "in": "query",
            "description": "Optional reason for the flush operation (for audit trail)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Priority level: Normal (default) or High for urgent operations",
            "schema": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.Events.FlushPriority"
            }
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "description": "Optional timeout in seconds (default: service timeout)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeStatistics",
            "in": "query",
            "description": "Whether to include detailed statistics in logs (default: true)",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/batch-spending/status": {
      "get": {
        "tags": [
          "BatchSpending"
        ],
        "summary": "Gets information about the batch spending system status.\n\nThis endpoint provides operational visibility into:\n- Event publishing capability\n- System readiness for flush operations\n- Configuration details\n\nNote: This endpoint checks the Admin API's ability to publish events,\nnot the Core API's batch spending service status (which is internal).",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/batch-spending/info": {
      "get": {
        "tags": [
          "BatchSpending"
        ],
        "summary": "Gets operational information about the batch spending flush capability.\n\nThis endpoint provides documentation and operational guidance for administrators\nwithout exposing internal Core API details.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/query": {
      "post": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Query billing audit events with filtering and pagination",
        "requestBody": {
          "description": "Query parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/summary": {
      "get": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Get summary statistics for billing audit events",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "virtualKeyId",
            "in": "query",
            "description": "Optional virtual key ID filter",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAuditSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAuditSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAuditSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/anomalies": {
      "get": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Detect anomalies in billing patterns",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAnomaly"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAnomaly"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Interfaces.BillingAnomaly"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/revenue-loss": {
      "get": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Get potential revenue loss from billing failures",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/export": {
      "post": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Export billing audit events in various formats",
        "requestBody": {
          "description": "Export parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditExportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditExportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/billing/event-types": {
      "get": {
        "tags": [
          "BillingAudit"
        ],
        "summary": "Get distinct event types",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/config/routing": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Gets routing configuration and rules.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Gets caching configuration and statistics.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Updates caching configuration.",
        "requestBody": {
          "description": "Updated caching configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCacheConfigDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCacheConfigDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCacheConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/{cacheId}/clear": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Clears specific cache by ID.",
        "parameters": [
          {
            "name": "cacheId",
            "in": "path",
            "description": "Cache policy ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/statistics": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Gets cache statistics for all regions or a specific region.",
        "parameters": [
          {
            "name": "regionId",
            "in": "query",
            "description": "Optional region ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/regions": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Lists all cache regions.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/{regionId}/entries": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Gets entries from a specific cache region.",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "Region ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Number of entries to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/{regionId}/refresh": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Forces a refresh of cache entries in a region.",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "Region ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Optional specific key to refresh.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/config/caching/{regionId}/policy": {
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Updates the policy for a specific cache region.",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "Region ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Policy update details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCachePolicyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCachePolicyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Cache.UpdateCachePolicyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GlobalSettings": {
      "get": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Gets all global settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Creates a new global setting",
        "requestBody": {
          "description": "The setting to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateGlobalSettingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateGlobalSettingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateGlobalSettingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/GlobalSettings/{id}": {
      "get": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Gets a global setting by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Updates an existing global setting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated setting data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Deletes a global setting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the setting to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/GlobalSettings/by-key/{key}": {
      "get": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Gets a global setting by key",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the setting to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.GlobalSettingDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Deletes a global setting by key",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the setting to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/GlobalSettings/by-key": {
      "put": {
        "tags": [
          "GlobalSettings"
        ],
        "summary": "Updates or creates a global setting by key",
        "requestBody": {
          "description": "The setting data with key, value, and optional description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingByKeyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingByKeyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateGlobalSettingByKeyDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/health/services": {
      "get": {
        "tags": [
          "HealthMonitoring"
        ],
        "summary": "Gets current service health status.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/health/incidents": {
      "get": {
        "tags": [
          "HealthMonitoring"
        ],
        "summary": "Gets incident history.",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "Number of days to look back (default: 7).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/health/history": {
      "get": {
        "tags": [
          "HealthMonitoring"
        ],
        "summary": "Gets health history data.",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "description": "Number of hours to look back (default: 24).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/IpFilter": {
      "get": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Gets all IP filters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Creates a new IP filter",
        "requestBody": {
          "description": "The filter to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.CreateIpFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.CreateIpFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.CreateIpFilterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/IpFilter/enabled": {
      "get": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Gets all enabled IP filters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/IpFilter/{id}": {
      "get": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Gets an IP filter by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filter to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Updates an existing IP filter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filter to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated filter data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.UpdateIpFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.UpdateIpFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.UpdateIpFilterDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Deletes an IP filter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the filter to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/IpFilter/settings": {
      "get": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Gets the current IP filter settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Updates the IP filter settings",
        "requestBody": {
          "description": "The new settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/IpFilter/check/{ipAddress}": {
      "get": {
        "tags": [
          "IpFilter"
        ],
        "summary": "Checks if an IP address is allowed based on current filter rules",
        "parameters": [
          {
            "name": "ipAddress",
            "in": "path",
            "description": "The IP address to check",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpCheckResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpCheckResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpCheckResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/admin/Media/stats": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Gets overall storage statistics across all virtual keys.",
        "parameters": [
          {
            "name": "virtualKeyGroupId",
            "in": "query",
            "description": "Optional filter by virtual key group ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/stats/virtual-key/{virtualKeyId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Gets storage statistics for a specific virtual key.",
        "parameters": [
          {
            "name": "virtualKeyId",
            "in": "path",
            "description": "The ID of the virtual key.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/stats/by-provider": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Gets storage statistics grouped by provider.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/stats/by-type": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Gets storage statistics grouped by media type.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/virtual-key/{virtualKeyId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Gets media records for a specific virtual key.",
        "parameters": [
          {
            "name": "virtualKeyId",
            "in": "path",
            "description": "The ID of the virtual key.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/search": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Searches for media records by storage key pattern.",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "description": "The pattern to search for in storage keys.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/{mediaId}": {
      "delete": {
        "tags": [
          "Media"
        ],
        "summary": "Deletes a specific media record and its associated file.",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "The ID of the media record to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/cleanup/expired": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Manually triggers cleanup of expired media files.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/cleanup/orphaned": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Manually triggers cleanup of orphaned media files.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/Media/cleanup/prune": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Manually triggers pruning of old media files.",
        "requestBody": {
          "description": "The pruning request with days to keep.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.PruneMediaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.PruneMediaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.PruneMediaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/admin/media-retention/policies": {
      "get": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Get all media retention policies.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Create a new media retention policy.",
        "requestBody": {
          "description": "Policy creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateMediaRetentionPolicyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateMediaRetentionPolicyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateMediaRetentionPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/media-retention/policies/{id}": {
      "get": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Get a specific media retention policy by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Update an existing media retention policy.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Policy update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateMediaRetentionPolicyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateMediaRetentionPolicyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateMediaRetentionPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Delete a media retention policy.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Policy ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/media-retention/assign/{groupId}/{policyId}": {
      "post": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Assign a retention policy to a virtual key group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Virtual key group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "Retention policy ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/media-retention/cleanup/{groupId}": {
      "post": {
        "tags": [
          "MediaRetention"
        ],
        "summary": "Trigger a manual media cleanup for a specific virtual key group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "Virtual key group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dryRun",
            "in": "query",
            "description": "Whether to perform a dry run (default: true)",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CleanupResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CleanupResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CleanupResultDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/database/pool": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Gets database connection pool metrics.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Gets all application metrics including database, cache, and performance metrics.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Model": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets all models with their capabilities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Creates a new model",
        "requestBody": {
          "description": "The model to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.CreateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.CreateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.CreateModelDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets a specific model by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Model"
        ],
        "summary": "Updates an existing model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated model data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.UpdateModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.UpdateModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.UpdateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Deletes a model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/search": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Searches for models by name",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/provider/{provider}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets models available from a specific provider",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "The provider name (e.g., \"groq\", \"openai\", \"anthropic\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelWithProviderIdDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelWithProviderIdDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.Models.ModelWithProviderIdDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/{id}/identifiers": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets model identifiers for a specific model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/{id}/provider-mappings": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets all provider mappings for a specific model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Creates a new provider mapping for a specific model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The provider mapping to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Model/{id}/provider-mappings/{mappingId}": {
      "put": {
        "tags": [
          "Model"
        ],
        "summary": "Updates a provider mapping for a specific model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mappingId",
            "in": "path",
            "description": "The mapping ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated provider mapping data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Deletes a provider mapping for a specific model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mappingId",
            "in": "path",
            "description": "The mapping ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelAuthor": {
      "get": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Gets all model authors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Creates a new model author",
        "requestBody": {
          "description": "The model author to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.CreateModelAuthorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.CreateModelAuthorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.CreateModelAuthorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelAuthor/{id}": {
      "get": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Gets a specific model author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The author ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Updates an existing model author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The author ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated model author data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.UpdateModelAuthorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.UpdateModelAuthorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.UpdateModelAuthorDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Deletes a model author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The author ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelAuthor/{id}/series": {
      "get": {
        "tags": [
          "ModelAuthor"
        ],
        "summary": "Gets series by author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The author ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.SimpleModelSeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.SimpleModelSeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelAuthors.SimpleModelSeriesDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCapabilities": {
      "get": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Gets all model capabilities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Creates a new model capabilities",
        "requestBody": {
          "description": "The model capabilities to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CreateCapabilitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CreateCapabilitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CreateCapabilitiesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCapabilities/{id}": {
      "get": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Gets a specific model capabilities by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The capabilities ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Updates an existing model capabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The capabilities ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated model capabilities data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.UpdateCapabilitiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.UpdateCapabilitiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.UpdateCapabilitiesDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Deletes a model capabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The capabilities ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCapabilities/{id}/models": {
      "get": {
        "tags": [
          "ModelCapabilities"
        ],
        "summary": "Gets models using specific capabilities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The capabilities ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesSimpleModelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesSimpleModelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesSimpleModelDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Gets all model costs with optional pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Creates a new model cost",
        "requestBody": {
          "description": "The model cost to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/{id}": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Gets a model cost by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the model cost",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Updates a model cost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the model cost to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated model cost data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateModelCostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateModelCostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateModelCostDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Deletes a model cost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the model cost to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/provider/{providerId}": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Gets model costs by provider ID",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/name/{costName}": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Gets a model cost by cost name",
        "parameters": [
          {
            "name": "costName",
            "in": "path",
            "description": "The cost name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/overview": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Gets model cost overview data for a specific time period",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the period (inclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the period (inclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostOverviewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostOverviewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelCostOverviewDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/import": {
      "post": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Imports model costs from a list of DTOs",
        "requestBody": {
          "description": "The list of model costs to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateModelCostDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/export/csv": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Exports model costs in CSV format",
        "parameters": [
          {
            "name": "providerId",
            "in": "query",
            "description": "Optional provider ID to filter by",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/export/json": {
      "get": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Exports model costs in JSON format",
        "parameters": [
          {
            "name": "providerId",
            "in": "query",
            "description": "Optional provider ID to filter by",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/import/csv": {
      "post": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Imports model costs from CSV file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "CSV file containing model costs",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelCosts/import/json": {
      "post": {
        "tags": [
          "ModelCosts"
        ],
        "summary": "Imports model costs from JSON file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "JSON file containing model costs",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelProviderMapping": {
      "get": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Gets all model provider mappings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Creates a new model provider mapping",
        "requestBody": {
          "description": "The mapping to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelProviderMapping/{id}": {
      "get": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Gets a specific model provider mapping by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mapping to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Updates an existing model provider mapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mapping to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated mapping data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Deletes a model provider mapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the mapping to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelProviderMapping/providers": {
      "get": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Gets all available providers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.Provider"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.Provider"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.Provider"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelProviderMapping/bulk": {
      "post": {
        "tags": [
          "ModelProviderMapping"
        ],
        "summary": "Creates multiple model provider mappings in a single operation",
        "requestBody": {
          "description": "The mappings to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.BulkMappingResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.BulkMappingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.BulkMappingResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelSeries": {
      "get": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Gets all model series",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Creates a new model series",
        "requestBody": {
          "description": "The model series to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.CreateModelSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.CreateModelSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.CreateModelSeriesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelSeries/{id}": {
      "get": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Gets a specific model series by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The series ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Updates an existing model series",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The series ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated model series data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.UpdateModelSeriesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.UpdateModelSeriesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.UpdateModelSeriesDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Deletes a model series",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The series ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ModelSeries/{id}/models": {
      "get": {
        "tags": [
          "ModelSeries"
        ],
        "summary": "Gets models in a series",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The series ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.SeriesSimpleModelDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.SeriesSimpleModelDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.SeriesSimpleModelDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets all notifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Creates a new notification",
        "requestBody": {
          "description": "The notification to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Notifications/unread": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets all unread notifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Gets a notification by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the notification to get",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.NotificationDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates an existing notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the notification to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated notification data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.UpdateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Deletes a notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the notification to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Notifications/{id}/read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Marks a notification as read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the notification to mark as read",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Notifications/mark-all-read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Marks all notifications as read",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/{providerId}/keys": {
      "get": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Gets all key credentials for a specific provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Creates a new key credential for a provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing key credential details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateKeyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateKeyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/{providerId}/keys/{keyId}": {
      "get": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Gets a specific key credential",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The ID of the key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Updates a key credential",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The ID of the key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The update request containing new key credential values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateKeyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateKeyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateKeyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Deletes a key credential",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The ID of the key to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/{providerId}/keys/{keyId}/set-primary": {
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Sets a key as the primary key for a provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The ID of the key to set as primary",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials": {
      "get": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Gets all provider configurations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Creates a new provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateProviderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateProviderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.CreateProviderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/{id}": {
      "get": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Gets a provider by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Updates a provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The update request containing new provider values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateProviderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateProviderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.UpdateProviderRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Deletes a provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/test/{id}": {
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Tests the connection to a provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the provider to test",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/test": {
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Tests a provider connection without saving",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.TestProviderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.TestProviderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.TestProviderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/ProviderCredentials/{providerId}/keys/{keyId}/test": {
      "post": {
        "tags": [
          "ProviderCredentials"
        ],
        "summary": "Tests a specific key credential",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the provider",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The ID of the key to test",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/provider-errors/recent": {
      "get": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Get recent errors across all providers",
        "parameters": [
          {
            "name": "providerId",
            "in": "query",
            "description": "Optional provider ID filter",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keyId",
            "in": "query",
            "description": "Optional key ID filter",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of errors to return (default: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/provider-errors/summary": {
      "get": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Get error summary for all providers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorSummaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorSummaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ProviderErrorSummaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/provider-errors/keys/{keyId}": {
      "get": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Get detailed error information for a specific key",
        "parameters": [
          {
            "name": "keyId",
            "in": "path",
            "description": "ID of the key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.KeyErrorDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.KeyErrorDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.KeyErrorDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/provider-errors/keys/{keyId}/clear": {
      "post": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Clear errors and optionally re-enable a key",
        "parameters": [
          {
            "name": "keyId",
            "in": "path",
            "description": "ID of the key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Clear errors request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ClearErrorsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ClearErrorsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ClearErrorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/provider-errors/stats": {
      "get": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Get error statistics for dashboard",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "description": "Time window in hours (default: 24)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ErrorStatisticsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ErrorStatisticsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ErrorStatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/provider-errors/providers/{providerId}/key-errors": {
      "get": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Get error counts by key for a specific provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Provider ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "description": "Time window in hours (default: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/provider-errors/keys/{keyId}/disable": {
      "post": {
        "tags": [
          "ProviderErrors"
        ],
        "summary": "Manually disable a key due to errors",
        "parameters": [
          {
            "name": "keyId",
            "in": "path",
            "description": "ID of the key to disable",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Reason for disabling",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/security/events": {
      "get": {
        "tags": [
          "SecurityMonitoring"
        ],
        "summary": "Gets security events for monitoring.",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "description": "Number of hours to look back (default: 24).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/security/threats": {
      "get": {
        "tags": [
          "SecurityMonitoring"
        ],
        "summary": "Gets threat analytics data.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/security/compliance": {
      "get": {
        "tags": [
          "SecurityMonitoring"
        ],
        "summary": "Gets compliance metrics.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SystemInfo/info": {
      "get": {
        "tags": [
          "SystemInfo"
        ],
        "summary": "Gets system information",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.SystemInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.SystemInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.SystemInfoDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/SystemInfo/health": {
      "get": {
        "tags": [
          "SystemInfo"
        ],
        "summary": "Gets health status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.HealthStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.HealthStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.HealthStatusDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/admin/tasks/cleanup": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Cleans up old completed tasks system-wide.",
        "description": "This is an administrative operation that affects all users' tasks.\nIt archives completed tasks older than the specified threshold and\npermanently deletes archived tasks older than 30 days.",
        "parameters": [
          {
            "name": "olderThanHours",
            "in": "query",
            "description": "Remove tasks older than this many hours (default: 24, min: 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/VirtualKeyGroups": {
      "get": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Get all virtual key groups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Create a new virtual key group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyGroupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyGroupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/VirtualKeyGroups/{id}": {
      "get": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Get a specific virtual key group by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Update a virtual key group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyGroupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyGroupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Delete a virtual key group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/VirtualKeyGroups/{id}/adjust-balance": {
      "post": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Adjust the balance of a virtual key group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.AdjustBalanceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.AdjustBalanceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.AdjustBalanceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/VirtualKeyGroups/{id}/transactions": {
      "get": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Get transaction history for a virtual key group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeyGroups/{id}/keys": {
      "get": {
        "tags": [
          "VirtualKeyGroups"
        ],
        "summary": "Get virtual keys in a group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/VirtualKeys": {
      "post": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Generates a new virtual API key",
        "requestBody": {
          "description": "Details for the key to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Retrieves a list of all virtual keys",
        "parameters": [
          {
            "name": "virtualKeyGroupId",
            "in": "query",
            "description": "Optional filter by virtual key group ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/{id}": {
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Retrieves details for a specific virtual key by ID",
        "operationId": "GetKeyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the key to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Updates an existing virtual key",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the key to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated key details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyRequestDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Deletes a virtual key by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the key to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/validate": {
      "post": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Validates a virtual key",
        "requestBody": {
          "description": "The validation request containing the key and optional model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.ValidateVirtualKeyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.ValidateVirtualKeyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.ValidateVirtualKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/{id}/validation-info": {
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Gets detailed information about a virtual key for validation purposes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the virtual key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationInfoDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/maintenance": {
      "post": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Performs maintenance tasks on all virtual keys",
        "description": "This endpoint performs the following maintenance tasks:\n- Disables keys that have passed their expiration date\nBudget resets are no longer performed in the bank account model.\nThis is typically called by a background service.",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/{id}/discovery-preview": {
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Previews the discovery results for a virtual key",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the virtual key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "capability",
            "in": "query",
            "description": "Optional capability filter (e.g. \"chat\", \"vision\", \"audio_transcription\")",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKeyDiscoveryPreviewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKeyDiscoveryPreviewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKeyDiscoveryPreviewDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/{id}/group": {
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Get the virtual key group for a specific key",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the virtual key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/VirtualKeys/usage/by-key/{key}": {
      "get": {
        "tags": [
          "VirtualKeys"
        ],
        "summary": "Get usage information for a virtual key by its key value",
        "description": "This endpoint allows administrators to check the usage and balance of a virtual key \nusing the actual key value instead of the database ID. This is useful for support \nscenarios where users provide their key value.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The virtual key value (with prefix)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyUsageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyUsageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyUsageDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConduitLLM.Admin.Controllers.BulkMappingResult": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelProviderMappingDto"
            },
            "description": "Successfully created mappings",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Error messages for failed mappings",
            "nullable": true
          },
          "totalProcessed": {
            "type": "integer",
            "description": "Total number of mappings processed",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "description": "Number of successful mappings",
            "format": "int32"
          },
          "failureCount": {
            "type": "integer",
            "description": "Number of failed mappings",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Result of a bulk mapping operation"
      },
      "ConduitLLM.Admin.Controllers.CleanupResultDto": {
        "type": "object",
        "properties": {
          "virtualKeyGroupId": {
            "type": "integer",
            "description": "Gets or sets the ID of the virtual key group that was cleaned up.",
            "format": "int32"
          },
          "dryRun": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this was a dry run (no actual deletions)."
          },
          "mediaRecordsEvaluated": {
            "type": "integer",
            "description": "Gets or sets the total number of media records evaluated during cleanup.",
            "format": "int32"
          },
          "mediaRecordsMarkedForDeletion": {
            "type": "integer",
            "description": "Gets or sets the number of media records marked for deletion.",
            "format": "int32"
          },
          "mediaRecordsDeleted": {
            "type": "integer",
            "description": "Gets or sets the number of media records actually deleted.",
            "format": "int32"
          },
          "storageBytesFreed": {
            "type": "integer",
            "description": "Gets or sets the total amount of storage space freed in bytes.",
            "format": "int64"
          },
          "message": {
            "type": "string",
            "description": "Gets or sets an informational message about the cleanup operation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the result of a media cleanup operation."
      },
      "ConduitLLM.Admin.Controllers.CreateKeyRequest": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key to create",
            "nullable": true
          },
          "keyName": {
            "type": "string",
            "description": "The name for the key credential",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "description": "The organization for the key (optional)",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "The base URL for the key (optional)",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Whether this is the primary key for the provider"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the key is enabled"
          },
          "providerAccountGroup": {
            "type": "integer",
            "description": "The provider account group (optional)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for creating a key credential"
      },
      "ConduitLLM.Admin.Controllers.CreateMediaRetentionPolicyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the retention policy.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the retention policy.",
            "nullable": true
          },
          "positiveBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is positive.",
            "format": "int32"
          },
          "zeroBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is zero.",
            "format": "int32"
          },
          "negativeBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is negative.",
            "format": "int32"
          },
          "softDeleteGracePeriodDays": {
            "type": "integer",
            "description": "Gets or sets the grace period in days before permanently deleting soft-deleted media.",
            "format": "int32"
          },
          "respectRecentAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to respect recent access when determining retention."
          },
          "recentAccessWindowDays": {
            "type": "integer",
            "description": "Gets or sets the window in days for considering recent access.",
            "format": "int32"
          },
          "isProTier": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is a pro tier policy."
          },
          "isDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is the default policy."
          },
          "maxStorageSizeBytes": {
            "type": "integer",
            "description": "Gets or sets the maximum storage size in bytes allowed for this policy.",
            "format": "int64",
            "nullable": true
          },
          "maxFileCount": {
            "type": "integer",
            "description": "Gets or sets the maximum number of files allowed for this policy.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for creating a new media retention policy."
      },
      "ConduitLLM.Admin.Controllers.CreateProviderRequest": {
        "type": "object",
        "properties": {
          "providerType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.ProviderType"
          },
          "providerName": {
            "type": "string",
            "description": "The name of the provider",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "The base URL for the provider (optional)",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the provider is enabled"
          }
        },
        "additionalProperties": false,
        "description": "Request model for creating a provider"
      },
      "ConduitLLM.Admin.Controllers.MediaRetentionPolicyDetailDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the retention policy.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the retention policy.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the retention policy.",
            "nullable": true
          },
          "positiveBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is positive.",
            "format": "int32"
          },
          "zeroBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is zero.",
            "format": "int32"
          },
          "negativeBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is negative.",
            "format": "int32"
          },
          "softDeleteGracePeriodDays": {
            "type": "integer",
            "description": "Gets or sets the grace period in days before permanently deleting soft-deleted media.",
            "format": "int32"
          },
          "respectRecentAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to respect recent access when determining retention."
          },
          "recentAccessWindowDays": {
            "type": "integer",
            "description": "Gets or sets the window in days for considering recent access.",
            "format": "int32"
          },
          "isProTier": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is a pro tier policy."
          },
          "isDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is the default policy."
          },
          "maxStorageSizeBytes": {
            "type": "integer",
            "description": "Gets or sets the maximum storage size in bytes allowed for this policy.",
            "format": "int64",
            "nullable": true
          },
          "maxFileCount": {
            "type": "integer",
            "description": "Gets or sets the maximum number of files allowed for this policy.",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this policy is active."
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the date and time when the policy was created.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the date and time when the policy was last updated.",
            "format": "date-time"
          },
          "virtualKeyGroupCount": {
            "type": "integer",
            "description": "Gets or sets the count of virtual key groups using this policy.",
            "format": "int32"
          },
          "virtualKeyGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.Controllers.VirtualKeyGroupSummaryDto"
            },
            "description": "Gets or sets the list of virtual key groups associated with this policy.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Extended DTO for media retention policy with additional details."
      },
      "ConduitLLM.Admin.Controllers.MediaRetentionPolicyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the retention policy.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the retention policy.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the retention policy.",
            "nullable": true
          },
          "positiveBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is positive.",
            "format": "int32"
          },
          "zeroBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is zero.",
            "format": "int32"
          },
          "negativeBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is negative.",
            "format": "int32"
          },
          "softDeleteGracePeriodDays": {
            "type": "integer",
            "description": "Gets or sets the grace period in days before permanently deleting soft-deleted media.",
            "format": "int32"
          },
          "respectRecentAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to respect recent access when determining retention."
          },
          "recentAccessWindowDays": {
            "type": "integer",
            "description": "Gets or sets the window in days for considering recent access.",
            "format": "int32"
          },
          "isProTier": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is a pro tier policy."
          },
          "isDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is the default policy."
          },
          "maxStorageSizeBytes": {
            "type": "integer",
            "description": "Gets or sets the maximum storage size in bytes allowed for this policy.",
            "format": "int64",
            "nullable": true
          },
          "maxFileCount": {
            "type": "integer",
            "description": "Gets or sets the maximum number of files allowed for this policy.",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this policy is active."
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the date and time when the policy was created.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the date and time when the policy was last updated.",
            "format": "date-time"
          },
          "virtualKeyGroupCount": {
            "type": "integer",
            "description": "Gets or sets the count of virtual key groups using this policy.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for media retention policy information."
      },
      "ConduitLLM.Admin.Controllers.PruneMediaRequest": {
        "type": "object",
        "properties": {
          "daysToKeep": {
            "type": "integer",
            "description": "Gets or sets the number of days to keep media files.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for pruning old media."
      },
      "ConduitLLM.Admin.Controllers.TestProviderRequest": {
        "type": "object",
        "properties": {
          "providerType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.ProviderType"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key to test",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "The base URL to test (optional)",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "description": "The organization to test (optional)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for testing a provider connection"
      },
      "ConduitLLM.Admin.Controllers.UpdateKeyRequest": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "The new name for the key (optional)",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "description": "The new API key (optional)",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "description": "The new organization (optional)",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "The new base URL (optional)",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "description": "Whether this should be the primary key (optional)",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the key is enabled (optional)",
            "nullable": true
          },
          "providerAccountGroup": {
            "type": "integer",
            "description": "The provider account group (optional)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for updating a key credential"
      },
      "ConduitLLM.Admin.Controllers.UpdateMediaRetentionPolicyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the retention policy.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the retention policy.",
            "nullable": true
          },
          "positiveBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is positive.",
            "format": "int32",
            "nullable": true
          },
          "zeroBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is zero.",
            "format": "int32",
            "nullable": true
          },
          "negativeBalanceRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the retention period in days for media when balance is negative.",
            "format": "int32",
            "nullable": true
          },
          "softDeleteGracePeriodDays": {
            "type": "integer",
            "description": "Gets or sets the grace period in days before permanently deleting soft-deleted media.",
            "format": "int32",
            "nullable": true
          },
          "respectRecentAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to respect recent access when determining retention.",
            "nullable": true
          },
          "recentAccessWindowDays": {
            "type": "integer",
            "description": "Gets or sets the window in days for considering recent access.",
            "format": "int32",
            "nullable": true
          },
          "isProTier": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is a pro tier policy.",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this is the default policy.",
            "nullable": true
          },
          "maxStorageSizeBytes": {
            "type": "integer",
            "description": "Gets or sets the maximum storage size in bytes allowed for this policy.",
            "format": "int64",
            "nullable": true
          },
          "maxFileCount": {
            "type": "integer",
            "description": "Gets or sets the maximum number of files allowed for this policy.",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this policy is active.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for updating an existing media retention policy."
      },
      "ConduitLLM.Admin.Controllers.UpdateProviderRequest": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "The new name for the provider (optional)",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "The new base URL for the provider (optional)",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the provider is enabled"
          }
        },
        "additionalProperties": false,
        "description": "Request model for updating a provider"
      },
      "ConduitLLM.Admin.Controllers.VirtualKeyGroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the virtual key group identifier.",
            "format": "int32"
          },
          "balance": {
            "type": "number",
            "description": "Gets or sets the current balance of the virtual key group.",
            "format": "double"
          },
          "virtualKeyCount": {
            "type": "integer",
            "description": "Gets or sets the count of virtual keys in the group.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Summary information for a virtual key group."
      },
      "ConduitLLM.Admin.DTOs.BillingAuditEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the audit event",
            "format": "uuid"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp when the event occurred",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "description": "Type of billing event",
            "nullable": true
          },
          "virtualKeyId": {
            "type": "integer",
            "description": "Virtual key ID if applicable",
            "format": "int32",
            "nullable": true
          },
          "virtualKeyName": {
            "type": "string",
            "description": "Virtual key name for display",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "Model name",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "description": "Request identifier",
            "nullable": true
          },
          "calculatedCost": {
            "type": "number",
            "description": "Calculated cost",
            "format": "double",
            "nullable": true
          },
          "failureReason": {
            "type": "string",
            "description": "Failure reason if applicable",
            "nullable": true
          },
          "providerType": {
            "type": "string",
            "description": "Provider type",
            "nullable": true
          },
          "httpStatusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "nullable": true
          },
          "requestPath": {
            "type": "string",
            "description": "Request path",
            "nullable": true
          },
          "isEstimated": {
            "type": "boolean",
            "description": "Whether cost was estimated"
          },
          "usage": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.UsageDto"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "description": "Additional metadata",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for billing audit event"
      },
      "ConduitLLM.Admin.DTOs.BillingAuditExportRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Start date for export",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "End date for export",
            "format": "date-time"
          },
          "format": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.ExportFormat"
          },
          "virtualKeyId": {
            "type": "integer",
            "description": "Optional virtual key ID filter",
            "format": "int32",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.BillingAuditEventType"
          }
        },
        "additionalProperties": false,
        "description": "Request DTO for exporting audit events"
      },
      "ConduitLLM.Admin.DTOs.BillingAuditQueryRequest": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Start date for the query (inclusive)",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "End date for the query (inclusive)",
            "format": "date-time"
          },
          "eventType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.BillingAuditEventType"
          },
          "virtualKeyId": {
            "type": "integer",
            "description": "Optional virtual key ID filter",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Page number (1-based)",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size (max 1000)",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Request DTO for querying billing audit events"
      },
      "ConduitLLM.Admin.DTOs.BillingAuditResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.BillingAuditEventDto"
            },
            "description": "List of audit events",
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Total count of matching events",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "description": "Current page number",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total pages available",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response DTO for billing audit event queries"
      },
      "ConduitLLM.Admin.DTOs.ClearErrorsRequest": {
        "type": "object",
        "properties": {
          "reenableKey": {
            "type": "boolean",
            "description": "Whether to re-enable the key"
          },
          "confirmReenable": {
            "type": "boolean",
            "description": "Confirmation that the admin wants to re-enable"
          },
          "reason": {
            "type": "string",
            "description": "Reason for re-enabling",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request DTO for clearing errors and re-enabling a key"
      },
      "ConduitLLM.Admin.DTOs.ErrorStatisticsDto": {
        "type": "object",
        "properties": {
          "totalErrors": {
            "type": "integer",
            "description": "Total number of errors in the time window",
            "format": "int32"
          },
          "fatalErrors": {
            "type": "integer",
            "description": "Number of fatal errors",
            "format": "int32"
          },
          "warnings": {
            "type": "integer",
            "description": "Number of warnings",
            "format": "int32"
          },
          "disabledKeys": {
            "type": "integer",
            "description": "Number of currently disabled keys",
            "format": "int32"
          },
          "errorsByType": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Errors by type",
            "nullable": true
          },
          "errorsByProvider": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Errors by provider",
            "nullable": true
          },
          "timeWindow": {
            "type": "string",
            "description": "Time window for the statistics",
            "format": "date-span"
          },
          "generatedAt": {
            "type": "string",
            "description": "When the statistics were generated",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO for error statistics"
      },
      "ConduitLLM.Admin.DTOs.ExportFormat": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "Export format options",
        "format": "int32"
      },
      "ConduitLLM.Admin.DTOs.FatalErrorDto": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "description": "Type of error",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Number of occurrences",
            "format": "int32"
          },
          "firstSeen": {
            "type": "string",
            "description": "When first seen",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "description": "When last seen",
            "format": "date-time"
          },
          "lastErrorMessage": {
            "type": "string",
            "description": "Last error message",
            "nullable": true
          },
          "lastStatusCode": {
            "type": "integer",
            "description": "Last HTTP status code",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for fatal error information"
      },
      "ConduitLLM.Admin.DTOs.KeyErrorDetailsDto": {
        "type": "object",
        "properties": {
          "keyId": {
            "type": "integer",
            "description": "Key ID",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "description": "Key name for display",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Whether the key is currently disabled"
          },
          "disabledAt": {
            "type": "string",
            "description": "When the key was disabled",
            "format": "date-time",
            "nullable": true
          },
          "fatalError": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.FatalErrorDto"
          },
          "recentWarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.DTOs.WarningErrorDto"
            },
            "description": "Recent warning errors",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for detailed key error information"
      },
      "ConduitLLM.Admin.DTOs.ProviderErrorDto": {
        "type": "object",
        "properties": {
          "keyCredentialId": {
            "type": "integer",
            "description": "ID of the key credential that caused the error",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "description": "Name of the key for display",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "description": "ID of the provider",
            "format": "int32"
          },
          "providerName": {
            "type": "string",
            "description": "Name of the provider",
            "nullable": true
          },
          "errorType": {
            "type": "string",
            "description": "Type of error",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          },
          "httpStatusCode": {
            "type": "integer",
            "description": "HTTP status code if applicable",
            "format": "int32",
            "nullable": true
          },
          "occurredAt": {
            "type": "string",
            "description": "When the error occurred",
            "format": "date-time"
          },
          "isFatal": {
            "type": "boolean",
            "description": "Whether this is a fatal error"
          },
          "modelName": {
            "type": "string",
            "description": "Model that was being used",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for individual provider error occurrence"
      },
      "ConduitLLM.Admin.DTOs.ProviderErrorSummaryDto": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "integer",
            "description": "Provider ID",
            "format": "int32"
          },
          "providerName": {
            "type": "string",
            "description": "Provider name",
            "nullable": true
          },
          "totalErrors": {
            "type": "integer",
            "description": "Total number of errors",
            "format": "int32"
          },
          "fatalErrors": {
            "type": "integer",
            "description": "Number of fatal errors",
            "format": "int32"
          },
          "warnings": {
            "type": "integer",
            "description": "Number of warnings",
            "format": "int32"
          },
          "disabledKeyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "List of disabled key IDs",
            "nullable": true
          },
          "lastError": {
            "type": "string",
            "description": "When the last error occurred",
            "format": "date-time",
            "nullable": true
          },
          "disabledKeyCount": {
            "type": "integer",
            "description": "Number of currently disabled keys",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for provider-level error summary"
      },
      "ConduitLLM.Admin.DTOs.UsageDto": {
        "type": "object",
        "properties": {
          "promptTokens": {
            "type": "integer",
            "description": "Prompt/input tokens",
            "format": "int32",
            "nullable": true
          },
          "completionTokens": {
            "type": "integer",
            "description": "Completion/output tokens",
            "format": "int32",
            "nullable": true
          },
          "totalTokens": {
            "type": "integer",
            "description": "Total tokens",
            "format": "int32",
            "nullable": true
          },
          "imageCount": {
            "type": "integer",
            "description": "Image count for image generation",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO for usage data"
      },
      "ConduitLLM.Admin.DTOs.WarningErrorDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of warning",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Warning message",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "When the warning occurred",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO for warning error information"
      },
      "ConduitLLM.Admin.Interfaces.AnalyticsSummaryDto": {
        "type": "object",
        "properties": {
          "totalRequests": {
            "type": "integer",
            "description": "Total number of requests in the period",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost in the period",
            "format": "double"
          },
          "totalInputTokens": {
            "type": "integer",
            "description": "Total input tokens processed",
            "format": "int64"
          },
          "totalOutputTokens": {
            "type": "integer",
            "description": "Total output tokens generated",
            "format": "int64"
          },
          "averageResponseTime": {
            "type": "number",
            "description": "Average response time in milliseconds",
            "format": "double"
          },
          "successRate": {
            "type": "number",
            "description": "Success rate as percentage (0-100)",
            "format": "double"
          },
          "uniqueVirtualKeys": {
            "type": "integer",
            "description": "Number of unique virtual keys used",
            "format": "int32"
          },
          "uniqueModels": {
            "type": "integer",
            "description": "Number of unique models used",
            "format": "int32"
          },
          "topModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.ModelUsageSummary"
            },
            "description": "Top models by usage",
            "nullable": true
          },
          "topVirtualKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.VirtualKeyUsageSummary"
            },
            "description": "Top virtual keys by cost",
            "nullable": true
          },
          "dailyStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.DailyStatistics"
            },
            "description": "Daily statistics for the period",
            "nullable": true
          },
          "comparison": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.Interfaces.PeriodComparison"
          }
        },
        "additionalProperties": false,
        "description": "Combined analytics summary DTO"
      },
      "ConduitLLM.Admin.Interfaces.DailyStatistics": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date for these statistics",
            "format": "date-time"
          },
          "requestCount": {
            "type": "integer",
            "description": "Number of requests on this date",
            "format": "int32"
          },
          "cost": {
            "type": "number",
            "description": "Total cost for this date",
            "format": "double"
          },
          "inputTokens": {
            "type": "integer",
            "description": "Total input tokens for this date",
            "format": "int64"
          },
          "outputTokens": {
            "type": "integer",
            "description": "Total output tokens for this date",
            "format": "int64"
          },
          "averageResponseTime": {
            "type": "number",
            "description": "Average response time for this date",
            "format": "double"
          },
          "errorCount": {
            "type": "integer",
            "description": "Number of errors on this date",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Daily statistics"
      },
      "ConduitLLM.Admin.Interfaces.ModelUsageSummary": {
        "type": "object",
        "properties": {
          "modelName": {
            "type": "string",
            "description": "Name of the model",
            "nullable": true
          },
          "requestCount": {
            "type": "integer",
            "description": "Total number of requests for this model",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost incurred by this model",
            "format": "double"
          },
          "inputTokens": {
            "type": "integer",
            "description": "Total input tokens processed",
            "format": "int64"
          },
          "outputTokens": {
            "type": "integer",
            "description": "Total output tokens generated",
            "format": "int64"
          },
          "averageResponseTime": {
            "type": "number",
            "description": "Average response time in milliseconds",
            "format": "double"
          },
          "errorRate": {
            "type": "number",
            "description": "Error rate as percentage (0-100)",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Model usage summary"
      },
      "ConduitLLM.Admin.Interfaces.PeriodComparison": {
        "type": "object",
        "properties": {
          "costChange": {
            "type": "number",
            "description": "Absolute change in cost compared to previous period",
            "format": "double"
          },
          "costChangePercentage": {
            "type": "number",
            "description": "Percentage change in cost compared to previous period",
            "format": "double"
          },
          "requestChange": {
            "type": "integer",
            "description": "Absolute change in request count compared to previous period",
            "format": "int32"
          },
          "requestChangePercentage": {
            "type": "number",
            "description": "Percentage change in request count compared to previous period",
            "format": "double"
          },
          "responseTimeChange": {
            "type": "number",
            "description": "Change in average response time compared to previous period",
            "format": "double"
          },
          "errorRateChange": {
            "type": "number",
            "description": "Change in error rate compared to previous period",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Period comparison for trend analysis"
      },
      "ConduitLLM.Admin.Interfaces.VirtualKeyUsageSummary": {
        "type": "object",
        "properties": {
          "virtualKeyId": {
            "type": "integer",
            "description": "Virtual key identifier",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "description": "Name of the virtual key",
            "nullable": true
          },
          "requestCount": {
            "type": "integer",
            "description": "Total number of requests",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "description": "Total cost incurred",
            "format": "double"
          },
          "lastUsed": {
            "type": "string",
            "description": "Last time this key was used",
            "format": "date-time",
            "nullable": true
          },
          "modelsUsed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of model names used with this key",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Virtual key usage summary"
      },
      "ConduitLLM.Admin.Models.EphemeralMasterKeyResponse": {
        "type": "object",
        "properties": {
          "ephemeralMasterKey": {
            "type": "string",
            "description": "The generated ephemeral master key token",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "description": "When the key expires",
            "format": "date-time"
          },
          "expiresInSeconds": {
            "type": "integer",
            "description": "Number of seconds until the key expires",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response model for ephemeral master key generation"
      },
      "ConduitLLM.Admin.Models.ModelAuthors.CreateModelAuthorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the author/organization.",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "description": "Gets or sets the optional website URL.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets an optional description of the organization.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for creating a new model author/organization."
      },
      "ConduitLLM.Admin.Models.ModelAuthors.ModelAuthorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the author.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the author/organization.",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "description": "Gets or sets the website URL for the author/organization.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets a description of the author/organization.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets when the author record was created.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets when the author record was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object representing an AI model author or organization."
      },
      "ConduitLLM.Admin.Models.ModelAuthors.SimpleModelSeriesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the series.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the model series.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description of the series.",
            "nullable": true
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          },
          "modelCount": {
            "type": "integer",
            "description": "Gets or sets the number of models in this series.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Simplified model series information for display within an author context."
      },
      "ConduitLLM.Admin.Models.ModelAuthors.UpdateModelAuthorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the ID of the author to update.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the new name for the author.",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "description": "Gets or sets the new website URL.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the new description.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for updating an existing model author/organization."
      },
      "ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for this capabilities configuration.",
            "format": "int32"
          },
          "supportsChat": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports chat/conversation interactions."
          },
          "supportsVision": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports vision/image understanding."
          },
          "supportsFunctionCalling": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports function/tool calling."
          },
          "supportsStreaming": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports streaming responses."
          },
          "supportsImageGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports image generation."
          },
          "supportsVideoGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports video generation."
          },
          "supportsEmbeddings": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports text embeddings generation."
          },
          "maxTokens": {
            "type": "integer",
            "description": "Gets or sets the maximum number of tokens the model can process.",
            "format": "int32"
          },
          "minTokens": {
            "type": "integer",
            "description": "Gets or sets the minimum number of tokens for the model.",
            "format": "int32"
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object representing the capabilities and characteristics of AI models."
      },
      "ConduitLLM.Admin.Models.ModelCapabilities.CapabilitiesSimpleModelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the model.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the canonical name of the model.",
            "nullable": true
          },
          "version": {
            "type": "string",
            "description": "Gets or sets the version identifier of the model.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the model is currently active."
          }
        },
        "additionalProperties": false,
        "description": "Simplified model information for display within a capabilities context."
      },
      "ConduitLLM.Admin.Models.ModelCapabilities.CreateCapabilitiesDto": {
        "type": "object",
        "properties": {
          "supportsChat": {
            "type": "boolean",
            "description": "Gets or sets whether models with these capabilities support chat/conversation."
          },
          "supportsVision": {
            "type": "boolean",
            "description": "Gets or sets whether models support vision/image understanding."
          },
          "supportsFunctionCalling": {
            "type": "boolean",
            "description": "Gets or sets whether models support function/tool calling."
          },
          "supportsStreaming": {
            "type": "boolean",
            "description": "Gets or sets whether models support streaming responses."
          },
          "supportsImageGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether models support image generation."
          },
          "supportsVideoGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether models support video generation."
          },
          "supportsEmbeddings": {
            "type": "boolean",
            "description": "Gets or sets whether models support text embeddings."
          },
          "maxTokens": {
            "type": "integer",
            "description": "Gets or sets the maximum token context window.",
            "format": "int32"
          },
          "minTokens": {
            "type": "integer",
            "description": "Gets or sets the minimum token requirement.",
            "format": "int32"
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for creating a new model capabilities configuration."
      },
      "ConduitLLM.Admin.Models.ModelCapabilities.ModelCapabilitiesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for this capabilities configuration.",
            "format": "int32"
          },
          "supportsChat": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports chat/conversation interactions."
          },
          "supportsVision": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports vision/image understanding."
          },
          "supportsFunctionCalling": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports function/tool calling."
          },
          "supportsStreaming": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports streaming responses."
          },
          "supportsImageGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports image generation."
          },
          "supportsVideoGeneration": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports video generation."
          },
          "supportsEmbeddings": {
            "type": "boolean",
            "description": "Gets or sets whether the model supports text embeddings generation."
          },
          "maxTokens": {
            "type": "integer",
            "description": "Gets or sets the maximum number of tokens the model can process.",
            "format": "int32"
          },
          "minTokens": {
            "type": "integer",
            "description": "Gets or sets the minimum number of tokens for the model.",
            "format": "int32"
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          }
        },
        "additionalProperties": false,
        "description": "Alias for CapabilitiesDto to maintain backward compatibility with ModelController."
      },
      "ConduitLLM.Admin.Models.ModelCapabilities.UpdateCapabilitiesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the ID of the capabilities configuration to update.",
            "format": "int32"
          },
          "supportsChat": {
            "type": "boolean",
            "description": "Gets or sets the new chat support status, or null to keep existing.",
            "nullable": true
          },
          "supportsVision": {
            "type": "boolean",
            "description": "Gets or sets the new vision support status, or null to keep existing.",
            "nullable": true
          },
          "supportsFunctionCalling": {
            "type": "boolean",
            "description": "Gets or sets the new function calling support, or null to keep existing.",
            "nullable": true
          },
          "supportsStreaming": {
            "type": "boolean",
            "description": "Gets or sets the new streaming support, or null to keep existing.",
            "nullable": true
          },
          "supportsImageGeneration": {
            "type": "boolean",
            "description": "Gets or sets the new image generation support, or null to keep existing.",
            "nullable": true
          },
          "supportsVideoGeneration": {
            "type": "boolean",
            "description": "Gets or sets the new video generation support, or null to keep existing.",
            "nullable": true
          },
          "supportsEmbeddings": {
            "type": "boolean",
            "description": "Gets or sets the new embeddings support, or null to keep existing.",
            "nullable": true
          },
          "maxTokens": {
            "type": "integer",
            "description": "Gets or sets the new max token limit, or null to keep existing.",
            "format": "int32",
            "nullable": true
          },
          "minTokens": {
            "type": "integer",
            "description": "Gets or sets the new min token requirement, or null to keep existing.",
            "format": "int32",
            "nullable": true
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for updating an existing model capabilities configuration."
      },
      "ConduitLLM.Admin.Models.ModelSeries.CreateModelSeriesDto": {
        "type": "object",
        "properties": {
          "authorId": {
            "type": "integer",
            "description": "Gets or sets the ID of the author/organization for this series.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of the model series.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets an optional description of the model series.",
            "nullable": true
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          },
          "parameters": {
            "type": "string",
            "description": "Gets or sets optional UI parameter configuration for the series.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for creating a new model series in the system."
      },
      "ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for this model series.",
            "format": "int32"
          },
          "authorId": {
            "type": "integer",
            "description": "Gets or sets the ID of the author/organization that created this model series.",
            "format": "int32"
          },
          "authorName": {
            "type": "string",
            "description": "Gets or sets the name of the author/organization.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the name of this model series.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets a description of this model series.",
            "nullable": true
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          },
          "parameters": {
            "type": "string",
            "description": "Gets or sets the UI parameters configuration for this series.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object representing a series or family of related AI models."
      },
      "ConduitLLM.Admin.Models.ModelSeries.SeriesSimpleModelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier of the model.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the canonical name of the model.",
            "nullable": true
          },
          "version": {
            "type": "string",
            "description": "Gets or sets the version identifier of the model.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the model is currently active."
          }
        },
        "additionalProperties": false,
        "description": "Simplified model information for display within a series context."
      },
      "ConduitLLM.Admin.Models.ModelSeries.UpdateModelSeriesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the ID of the series to update.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the new name for the series.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the new description for the series.",
            "nullable": true
          },
          "tokenizerType": {
            "$ref": "#/components/schemas/TokenizerType"
          },
          "parameters": {
            "type": "string",
            "description": "Gets or sets the new UI parameters configuration.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for updating an existing model series."
      },
      "ConduitLLM.Admin.Models.Models.CreateModelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the canonical name of the model to create.",
            "nullable": true,
            "example": "gpt-4-turbo"
          },
          "modelSeriesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the model series this model will belong to.",
            "format": "int32"
          },
          "modelCapabilitiesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the capabilities configuration for this model.",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether the model should be active upon creation.",
            "nullable": true
          },
          "modelParameters": {
            "type": "string",
            "description": "Gets or sets the model-specific parameter configuration for UI generation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for creating a new AI model in the system."
      },
      "ConduitLLM.Admin.Models.Models.ModelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the model.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the canonical name of the model.",
            "nullable": true
          },
          "modelSeriesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the model series this model belongs to.",
            "format": "int32"
          },
          "modelCapabilitiesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the capabilities configuration for this model.",
            "format": "int32"
          },
          "capabilities": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.ModelCapabilitiesDto"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether this model is currently active and available for use."
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the timestamp when this model was first created in the system.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the timestamp when this model was last updated.",
            "format": "date-time"
          },
          "series": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
          },
          "modelParameters": {
            "type": "string",
            "description": "Gets or sets the model-specific parameter configuration for UI generation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object representing a canonical AI model in the system."
      },
      "ConduitLLM.Admin.Models.Models.ModelWithProviderIdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the unique identifier for the model.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the canonical name of the model.",
            "nullable": true
          },
          "modelSeriesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the model series this model belongs to.",
            "format": "int32"
          },
          "modelCapabilitiesId": {
            "type": "integer",
            "description": "Gets or sets the ID of the capabilities configuration for this model.",
            "format": "int32"
          },
          "capabilities": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelCapabilities.ModelCapabilitiesDto"
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets whether this model is currently active and available for use."
          },
          "createdAt": {
            "type": "string",
            "description": "Gets or sets the timestamp when this model was first created in the system.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Gets or sets the timestamp when this model was last updated.",
            "format": "date-time"
          },
          "series": {
            "$ref": "#/components/schemas/ConduitLLM.Admin.Models.ModelSeries.ModelSeriesDto"
          },
          "modelParameters": {
            "type": "string",
            "description": "Gets or sets the model-specific parameter configuration for UI generation.",
            "nullable": true
          },
          "providerModelId": {
            "type": "string",
            "description": "Gets or sets the provider-specific identifier for this model.",
            "nullable": true,
            "example": "gpt-4-0613"
          }
        },
        "additionalProperties": false,
        "description": "Extended model DTO that includes the provider-specific identifier for the model."
      },
      "ConduitLLM.Admin.Models.Models.UpdateModelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the ID of the model to update.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the new canonical name for the model.",
            "nullable": true
          },
          "modelSeriesId": {
            "type": "integer",
            "description": "Gets or sets the new model series ID.",
            "format": "int32",
            "nullable": true
          },
          "modelCapabilitiesId": {
            "type": "integer",
            "description": "Gets or sets the new capabilities configuration ID.",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Gets or sets the new activation status for the model.",
            "nullable": true
          },
          "modelParameters": {
            "type": "string",
            "description": "Gets or sets the model-specific parameter configuration for UI generation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for updating an existing AI model in the system."
      },
      "ConduitLLM.Configuration.DTOs.Cache.UpdateCacheConfigDto": {
        "type": "object",
        "properties": {
          "defaultTTLSeconds": {
            "maximum": 86400,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxMemorySize": {
            "pattern": "^\\d+(\\.\\d+)?\\s*(B|KB|MB|GB|TB)$",
            "type": "string",
            "nullable": true
          },
          "evictionPolicy": {
            "pattern": "^(LRU|LFU|FIFO|Random|Priority|TTL)$",
            "type": "string",
            "nullable": true
          },
          "enableCompression": {
            "type": "boolean"
          },
          "clearAffectedCaches": {
            "type": "boolean"
          },
          "applyGlobally": {
            "type": "boolean"
          },
          "regionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Cache.UpdateCachePolicyDto": {
        "required": [
          "reason"
        ],
        "type": "object",
        "properties": {
          "ttl": {
            "maximum": 86400,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxSize": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "strategy": {
            "pattern": "^(LRU|LFU|FIFO|Random|Priority|TTL)$",
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "reason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.CostDashboardDto": {
        "type": "object",
        "properties": {
          "timeFrame": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "last24HoursCost": {
            "type": "number",
            "format": "double"
          },
          "last7DaysCost": {
            "type": "number",
            "format": "double"
          },
          "last30DaysCost": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "topModelsBySpend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.DetailedCostDataDto"
            },
            "nullable": true
          },
          "topProvidersBySpend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.DetailedCostDataDto"
            },
            "nullable": true
          },
          "topVirtualKeysBySpend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.DetailedCostDataDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.CostTrendDataDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "requestCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.CostTrendDto": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.CostTrendDataDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.DetailedCostDataDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "requestCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.ModelCostBreakdownDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.ModelCostDetail"
            },
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.ModelCostDetail": {
        "type": "object",
        "properties": {
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "requestCount": {
            "type": "integer",
            "format": "int32"
          },
          "inputTokens": {
            "type": "integer",
            "format": "int64"
          },
          "outputTokens": {
            "type": "integer",
            "format": "int64"
          },
          "averageCostPerRequest": {
            "type": "number",
            "format": "double"
          },
          "costPercentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostBreakdownDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "virtualKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostDetail"
            },
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Costs.VirtualKeyCostDetail": {
        "type": "object",
        "properties": {
          "virtualKeyId": {
            "type": "integer",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "requestCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageCostPerRequest": {
            "type": "number",
            "format": "double"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "uniqueModels": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.CreateGlobalSettingDto": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.CreateModelCostDto": {
        "required": [
          "costName",
          "modelType",
          "pricingModel"
        ],
        "type": "object",
        "properties": {
          "costName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.PricingModel"
          },
          "pricingConfiguration": {
            "type": "string",
            "nullable": true
          },
          "modelProviderMappingIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelType": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "inputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "outputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "embeddingCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageCostPerImage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "videoCostPerSecond": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "videoResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "batchProcessingMultiplier": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "supportsBatchProcessing": {
            "type": "boolean"
          },
          "imageQualityMultipliers": {
            "type": "string",
            "nullable": true
          },
          "imageResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "cachedInputCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cachedInputWriteCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerSearchUnit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerInferenceStep": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultInferenceSteps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.CreateNotificationDto": {
        "type": "object",
        "properties": {
          "virtualKeyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.NotificationType"
          },
          "severity": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.NotificationSeverity"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.DiscoveredModelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "providerType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.ProviderType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.GlobalSettingDto": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.IpFilter.CreateIpFilterDto": {
        "required": [
          "filterType",
          "ipAddressOrCidr"
        ],
        "type": "object",
        "properties": {
          "filterType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "ipAddressOrCidr": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.IpFilter.IpCheckResult": {
        "type": "object",
        "properties": {
          "isAllowed": {
            "type": "boolean"
          },
          "deniedReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto": {
        "required": [
          "filterType",
          "ipAddressOrCidr"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filterType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "ipAddressOrCidr": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.IpFilter.IpFilterSettingsDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "defaultAllow": {
            "type": "boolean"
          },
          "bypassForAdminUi": {
            "type": "boolean"
          },
          "excludedEndpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "filterMode": {
            "type": "string",
            "nullable": true
          },
          "whitelistFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
            },
            "nullable": true
          },
          "blacklistFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.IpFilter.IpFilterDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.IpFilter.UpdateIpFilterDto": {
        "required": [
          "filterType",
          "id",
          "ipAddressOrCidr"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "filterType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "ipAddressOrCidr": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.LogRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "virtualKeyId": {
            "type": "integer",
            "format": "int32"
          },
          "modelName": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "type": "string",
            "nullable": true
          },
          "inputTokens": {
            "type": "integer",
            "format": "int32"
          },
          "outputTokens": {
            "type": "integer",
            "format": "int32"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "responseTimeMs": {
            "type": "number",
            "format": "double"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "clientIp": {
            "type": "string",
            "nullable": true
          },
          "requestPath": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.ModelCostDto": {
        "required": [
          "costName",
          "modelType",
          "pricingModel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "costName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.PricingModel"
          },
          "pricingConfiguration": {
            "type": "string",
            "nullable": true
          },
          "associatedModelAliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "inputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "outputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "embeddingCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageCostPerImage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modelType": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "videoCostPerSecond": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "videoResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "batchProcessingMultiplier": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "supportsBatchProcessing": {
            "type": "boolean"
          },
          "imageQualityMultipliers": {
            "type": "string",
            "nullable": true
          },
          "imageResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "cachedInputCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cachedInputWriteCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerSearchUnit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerInferenceStep": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultInferenceSteps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.ModelCostOverviewDto": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "nullable": true
          },
          "requestCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "inputTokens": {
            "type": "integer",
            "format": "int64"
          },
          "outputTokens": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.ModelProviderMappingDto": {
        "required": [
          "modelAlias",
          "modelId",
          "providerId",
          "providerModelId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "modelAlias": {
            "minLength": 1,
            "type": "string"
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "providerModelId": {
            "minLength": 1,
            "type": "string"
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ProviderReferenceDto"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "maxContextTokensOverride": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "providerVariation": {
            "type": "string",
            "nullable": true
          },
          "qualityScore": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "defaultCapabilityType": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.ModelUsage": {
        "type": "object",
        "properties": {
          "requestCount": {
            "type": "integer",
            "format": "int32"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "inputTokens": {
            "type": "integer",
            "format": "int32"
          },
          "outputTokens": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.ComponentHealth": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.DatabaseInfo": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "connected": {
            "type": "boolean"
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "tableCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.HealthStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "checks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.ComponentHealth"
            },
            "nullable": true
          },
          "totalDuration": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.OsInfo": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "architecture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.RecordCountsDto": {
        "type": "object",
        "properties": {
          "virtualKeys": {
            "type": "integer",
            "format": "int32"
          },
          "requests": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "integer",
            "format": "int32"
          },
          "providers": {
            "type": "integer",
            "format": "int32"
          },
          "modelMappings": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.RuntimeInfo": {
        "type": "object",
        "properties": {
          "runtimeVersion": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "uptime": {
            "type": "string",
            "format": "date-span"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.SystemInfoDto": {
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.VersionInfo"
          },
          "operatingSystem": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.OsInfo"
          },
          "database": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.DatabaseInfo"
          },
          "runtime": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.RuntimeInfo"
          },
          "recordCounts": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.Monitoring.RecordCountsDto"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.Monitoring.VersionInfo": {
        "type": "object",
        "properties": {
          "appVersion": {
            "type": "string",
            "nullable": true
          },
          "buildDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.NotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "virtualKeyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "virtualKeyName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.NotificationType"
          },
          "severity": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.NotificationSeverity"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.LogRequestDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.LogRequestDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.PagedResult`1[[ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto, ConduitLLM.Configuration, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.ProviderReferenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "providerType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.ProviderType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.UpdateGlobalSettingByKeyDto": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.UpdateGlobalSettingDto": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.UpdateModelCostDto": {
        "required": [
          "costName",
          "modelType",
          "pricingModel"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "costName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "pricingModel": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.PricingModel"
          },
          "pricingConfiguration": {
            "type": "string",
            "nullable": true
          },
          "modelProviderMappingIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "modelType": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "inputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "outputCostPerMillionTokens": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "embeddingCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "imageCostPerImage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "videoCostPerSecond": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "videoResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "batchProcessingMultiplier": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "supportsBatchProcessing": {
            "type": "boolean"
          },
          "imageQualityMultipliers": {
            "type": "string",
            "nullable": true
          },
          "imageResolutionMultipliers": {
            "type": "string",
            "nullable": true
          },
          "cachedInputCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cachedInputWriteCostPerMillionTokens": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerSearchUnit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "costPerInferenceStep": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "defaultInferenceSteps": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.UpdateNotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isRead": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.UsageStatisticsDto": {
        "type": "object",
        "properties": {
          "totalRequests": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "totalInputTokens": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutputTokens": {
            "type": "integer",
            "format": "int32"
          },
          "totalTokens": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "averageResponseTimeMs": {
            "type": "number",
            "format": "double"
          },
          "modelUsage": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.ModelUsage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.AdjustBalanceDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyGroupRequestDto": {
        "required": [
          "groupName"
        ],
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "externalGroupId": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "initialBalance": {
            "maximum": 1000000000,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyRequestDto": {
        "required": [
          "keyName",
          "virtualKeyGroupId"
        ],
        "type": "object",
        "properties": {
          "keyName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          },
          "virtualKeyGroupId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "rateLimitRpm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateLimitRpd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.CreateVirtualKeyResponseDto": {
        "type": "object",
        "properties": {
          "virtualKey": {
            "type": "string",
            "nullable": true
          },
          "keyInfo": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyGroupRequestDto": {
        "type": "object",
        "properties": {
          "groupName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "externalGroupId": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.UpdateVirtualKeyRequestDto": {
        "type": "object",
        "properties": {
          "keyName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          },
          "virtualKeyGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "rateLimitRpm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateLimitRpd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.ValidateVirtualKeyRequest": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string"
          },
          "requestedModel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyDto": {
        "required": [
          "keyName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "keyName": {
            "minLength": 1,
            "type": "string"
          },
          "keyPrefix": {
            "type": "string",
            "nullable": true
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          },
          "virtualKeyGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "rateLimitRpm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateLimitRpd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "externalGroupId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "lifetimeCreditsAdded": {
            "type": "number",
            "format": "double"
          },
          "lifetimeSpent": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "virtualKeyCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyGroupTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "virtualKeyGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Enums.TransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "balanceAfter": {
            "type": "number",
            "format": "double"
          },
          "referenceType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Enums.ReferenceType"
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "initiatedBy": {
            "type": "string",
            "nullable": true
          },
          "initiatedByUserId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyUsageDto": {
        "type": "object",
        "properties": {
          "keyId": {
            "type": "integer",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "lifetimeCreditsAdded": {
            "type": "number",
            "format": "double"
          },
          "lifetimeSpent": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int32"
          },
          "totalTokens": {
            "type": "integer",
            "format": "int64"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rateLimitRpm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateLimitRpd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          },
          "virtualKeyGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rateLimitRpm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rateLimitRpd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKey.VirtualKeyValidationResult": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "virtualKeyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "allowedModels": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.DTOs.VirtualKeyDiscoveryPreviewDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.DTOs.DiscoveredModelDto"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.Entities.BillingAuditEventType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Entities.NotificationSeverity": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Entities.NotificationType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Entities.Provider": {
        "required": [
          "providerName",
          "providerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "providerType": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.ProviderType"
          },
          "providerName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "providerKeyCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.ProviderKeyCredential"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.Entities.ProviderKeyCredential": {
        "required": [
          "providerId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "providerId": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "$ref": "#/components/schemas/ConduitLLM.Configuration.Entities.Provider"
          },
          "providerAccountGroup": {
            "maximum": 32,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "nullable": true
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.Enums.ReferenceType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Enums.TransactionType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Events.FlushPriority": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.Interfaces.BillingAnomaly": {
        "type": "object",
        "properties": {
          "anomalyType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          },
          "detectedAt": {
            "type": "string",
            "format": "date-time"
          },
          "affectedVirtualKeyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "estimatedImpact": {
            "type": "number",
            "format": "double"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.Interfaces.BillingAuditSummary": {
        "type": "object",
        "properties": {
          "totalEvents": {
            "type": "integer",
            "format": "int64"
          },
          "successfulBillings": {
            "type": "integer",
            "format": "int64"
          },
          "zeroCostSkipped": {
            "type": "integer",
            "format": "int64"
          },
          "estimatedUsages": {
            "type": "integer",
            "format": "int64"
          },
          "failedUpdates": {
            "type": "integer",
            "format": "int64"
          },
          "errorResponsesSkipped": {
            "type": "integer",
            "format": "int64"
          },
          "missingUsageData": {
            "type": "integer",
            "format": "int64"
          },
          "totalBilledAmount": {
            "type": "number",
            "format": "double"
          },
          "potentialRevenueLoss": {
            "type": "number",
            "format": "double"
          },
          "eventTypeBreakdown": {
            "type": "object",
            "properties": {
              "UsageTracked": {
                "type": "integer",
                "format": "int64"
              },
              "UsageEstimated": {
                "type": "integer",
                "format": "int64"
              },
              "ZeroCostSkipped": {
                "type": "integer",
                "format": "int64"
              },
              "MissingCostConfig": {
                "type": "integer",
                "format": "int64"
              },
              "MissingUsageData": {
                "type": "integer",
                "format": "int64"
              },
              "SpendUpdateFailed": {
                "type": "integer",
                "format": "int64"
              },
              "ErrorResponseSkipped": {
                "type": "integer",
                "format": "int64"
              },
              "StreamingUsageMissing": {
                "type": "integer",
                "format": "int64"
              },
              "NoVirtualKey": {
                "type": "integer",
                "format": "int64"
              },
              "JsonParseError": {
                "type": "integer",
                "format": "int64"
              },
              "UnexpectedError": {
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "providerTypeBreakdown": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConduitLLM.Configuration.PricingModel": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ConduitLLM.Configuration.ProviderType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "format": "int32"
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "TokenizerType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key Authentication",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": [ ]
    }
  ]
}