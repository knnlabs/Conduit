services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: conduit
      POSTGRES_PASSWORD: conduitpass
      POSTGRES_DB: conduitdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U conduit -d conduitdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  rabbitmq:
    build: 
      context: ./docker/rabbitmq
      dockerfile: Dockerfile
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: conduit
      RABBITMQ_DEFAULT_PASS: conduitpass
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ConduitLLM.Http/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://conduit:conduitpass@postgres:5432/conduitdb
      ASPNETCORE_ENVIRONMENT: Production
      # Using new REDIS_URL format (old variables still work for backward compatibility)
      REDIS_URL: "redis://redis:6379"
      CONDUIT_REDIS_INSTANCE_NAME: "conduit:"
      Conduit__PerformanceTracking__Enabled: "true"
      Conduit__PerformanceTracking__IncludeInResponse: "true"
      Conduit__PerformanceTracking__TrackStreamingMetrics: "true"
      Logging__LogLevel__Default: "Information"
      Logging__LogLevel__ConduitLLM: "Information"
      Logging__LogLevel__ConduitLLM__Providers: "Debug"
      Logging__LogLevel__ConduitLLM__Providers__MiniMaxClient: "Debug"
      # Configure the public base URL for media storage
      CONDUITLLM__MEDIA_BASE_URL: http://localhost:5000
      # RabbitMQ configuration
      CONDUITLLM__RABBITMQ__HOST: rabbitmq
      CONDUITLLM__RABBITMQ__PORT: 5672
      CONDUITLLM__RABBITMQ__USERNAME: conduit
      CONDUITLLM__RABBITMQ__PASSWORD: conduitpass
      CONDUITLLM__RABBITMQ__VHOST: /
      CONDUITLLM__RABBITMQ__PREFETCHCOUNT: 10
      CONDUITLLM__RABBITMQ__PARTITIONCOUNT: 10
    ports:
      - "5000:8080"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  admin:
    build:
      context: .
      dockerfile: ConduitLLM.Admin/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://conduit:conduitpass@postgres:5432/conduitdb
      ASPNETCORE_ENVIRONMENT: Production
      # Using new CONDUIT_MASTER_KEY (old AdminApi__MasterKey still works)
      CONDUIT_MASTER_KEY: alpha
      # Redis cache configuration - using new REDIS_URL format
      REDIS_URL: "redis://redis:6379"
      CONDUIT_REDIS_INSTANCE_NAME: "conduit:"
      AdminApi__AllowedOrigins__0: http://webui:8080
      AdminApi__AllowedOrigins__1: http://localhost:5001
      # RabbitMQ configuration
      CONDUITLLM__RABBITMQ__HOST: rabbitmq
      CONDUITLLM__RABBITMQ__PORT: 5672
      CONDUITLLM__RABBITMQ__USERNAME: conduit
      CONDUITLLM__RABBITMQ__PASSWORD: conduitpass
      CONDUITLLM__RABBITMQ__VHOST: /
    ports:
      - "5002:8080"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  webui:
    build:
      context: .
      dockerfile: ConduitLLM.WebUI/Dockerfile
    depends_on:
      admin:
        condition: service_healthy
      api:
        condition: service_healthy
      # WebUI no longer needs direct database access
      # Only depends on the Admin API and LLM API
    environment:
      # WebUI no longer uses DATABASE_URL
      CONDUIT_MASTER_KEY: alpha
      CONDUIT_INSECURE: "false"
      CONDUIT_API_BASE_URL: http://api:8080
      # Redis cache configuration - using new REDIS_URL format
      REDIS_URL: "redis://redis:6379"
      CONDUIT_REDIS_INSTANCE_NAME: "conduit:"
      # Version check configuration
      CONDUIT_VERSION_CHECK_ENABLED: "true"
      CONDUIT_VERSION_CHECK_INTERVAL_HOURS: "24"
      # Admin API configuration (required)
      CONDUIT_ADMIN_API_BASE_URL: http://admin:8080
      # WebUI authentication password
      CONDUIT_WEBUI_AUTH_KEY: conduit123
      # IP Filtering Configuration (optional)
      # CONDUIT_IP_FILTERING_ENABLED: "true"
      # CONDUIT_IP_FILTER_MODE: "permissive"  # or "restrictive"
      # CONDUIT_IP_FILTER_DEFAULT_ALLOW: "true"
      # CONDUIT_IP_FILTER_BYPASS_ADMIN_UI: "true"
      # CONDUIT_IP_FILTER_ALLOW_PRIVATE: "true"  # Auto-allow private/intranet IPs
      # CONDUIT_IP_FILTER_WHITELIST: "192.168.1.0/24,10.0.0.0/8"
      # CONDUIT_IP_FILTER_BLACKLIST: "203.0.113.0/24"
      # Failed Login Protection
      # CONDUIT_MAX_FAILED_ATTEMPTS: "5"
      # CONDUIT_IP_BAN_DURATION_MINUTES: "30"
      # CONDUIT_SECURITY_USE_DISTRIBUTED_TRACKING: "true"  # Use Redis for distributed ban tracking
      # Rate Limiting
      # CONDUIT_RATE_LIMITING_ENABLED: "true"
      # CONDUIT_RATE_LIMIT_MAX_REQUESTS: "100"
      # CONDUIT_RATE_LIMIT_WINDOW_SECONDS: "60"
      # CONDUIT_RATE_LIMIT_EXCLUDED_PATHS: "/health,/_blazor,/css,/js,/images"
      # Security Headers
      # CONDUIT_SECURITY_HEADERS_X_FRAME_OPTIONS_ENABLED: "true"
      # CONDUIT_SECURITY_HEADERS_X_FRAME_OPTIONS: "DENY"
      # CONDUIT_SECURITY_HEADERS_CSP_ENABLED: "true"
      # CONDUIT_SECURITY_HEADERS_CSP: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval';"
      # CONDUIT_SECURITY_HEADERS_HSTS_ENABLED: "true"
      # CONDUIT_SECURITY_HEADERS_HSTS_MAX_AGE: "31536000"
    ports:
      - "5001:8080"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

volumes:
  pgdata:
  redis-data:
  rabbitmq-data: