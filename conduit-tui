#!/bin/bash

# Conduit TUI Launcher Script
# This script provides a convenient way to launch the Conduit TUI application

# Change to the script's directory to ensure relative paths work
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

# Check if the TUI project exists
if [ ! -d "ConduitLLM.TUI" ]; then
    echo "Error: ConduitLLM.TUI directory not found!"
    echo "Please ensure you're running this script from the Conduit repository root."
    exit 1
fi

# Check if --show-virtual-key is in the arguments (no build needed for this)
for arg in "$@"; do
    if [ "$arg" = "--show-virtual-key" ] || [ "$arg" = "-s" ]; then
        # Skip build for show-virtual-key option
        dotnet run --project ConduitLLM.TUI/ConduitLLM.TUI.csproj --no-build -- "$@" 2>/dev/null || \
        dotnet run --project ConduitLLM.TUI/ConduitLLM.TUI.csproj -- "$@"
        exit $?
    fi
done

# Check if .NET is installed
if ! command -v dotnet &> /dev/null; then
    echo "Error: .NET SDK is not installed or not in PATH"
    echo "Please install .NET 9.0 or later from https://dotnet.microsoft.com/download"
    exit 1
fi

# Build the project if it hasn't been built yet or if --build flag is passed
if [ "$1" == "--build" ] || [ ! -f "ConduitLLM.TUI/bin/Debug/net9.0/conduit-tui.dll" ]; then
    echo "Building Conduit TUI..."
    dotnet build ConduitLLM.TUI/ConduitLLM.TUI.csproj -c Debug --nologo -v quiet
    if [ $? -ne 0 ]; then
        echo "Build failed!"
        exit 1
    fi
    # If --build was the first argument, remove it before passing args to the app
    if [ "$1" == "--build" ]; then
        shift
    fi
fi

# Run the TUI application with all passed arguments
dotnet run --project ConduitLLM.TUI/ConduitLLM.TUI.csproj --no-build -- "$@"