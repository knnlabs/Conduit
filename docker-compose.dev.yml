# Development docker-compose with volume mounts for hot reloading
# Usage: ./scripts/start-dev.sh
# Features: User ID mapping, Swagger UI enabled, permission-free development

services:
  api:
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # Health monitoring configuration - API endpoint checks
      HealthMonitoring__ApiEndpoints__0__Name: AdminAPI
      HealthMonitoring__ApiEndpoints__0__Url: http://admin:8080/health
      HealthMonitoring__ApiEndpoints__0__TimeoutMs: 5000
      HealthMonitoring__ApiEndpoints__0__WarningThresholdMs: 1000

  admin:
    environment:
      ASPNETCORE_ENVIRONMENT: Development

  webui:
    # Use base node image for development instead of production build
    image: node:20-alpine
    # Start as root to fix volume ownership, then switch to user
    user: root
    volumes:
      # Mount source code for hot reloading
      - ./ConduitLLM.WebUI:/app/ConduitLLM.WebUI
      - ./SDKs:/app/SDKs
      # Cache node_modules in named volumes for better performance
      - webui_node_modules:/app/ConduitLLM.WebUI/node_modules
      - webui_next:/app/ConduitLLM.WebUI/.next
      - admin_sdk_node_modules:/app/SDKs/Node/Admin/node_modules
      - core_sdk_node_modules:/app/SDKs/Node/Core/node_modules
      - common_sdk_node_modules:/app/SDKs/Node/Common/node_modules
    environment:
      # Next.js development settings
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: 1
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: 1000
      FAST_REFRESH: "true"
      PORT: 3000
      # Backend service URLs
      CONDUIT_API_TO_API_BACKEND_AUTH_KEY: alpha
      CONDUIT_API_BASE_URL: http://api:8080
      CONDUIT_ADMIN_API_BASE_URL: http://admin:8080
      CONDUIT_API_EXTERNAL_URL: http://localhost:5000
      CONDUIT_ADMIN_API_EXTERNAL_URL: http://localhost:5002
      # Clerk authentication (using the test keys from docker-compose.yml)
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "pk_test_cHJlY2lzZS1yaW5ndGFpbC0zMy5jbGVyay5hY2NvdW50cy5kZXYk"
      CLERK_SECRET_KEY: "sk_test_oOI6FRt1EhRGaCVUc1zJVyWCNyqf3w1DSJnLZlxEQK"
    working_dir: /app/ConduitLLM.WebUI
    # Install su-exec and setup development environment
    command: |
      sh -c "
        echo 'Installing su-exec for user switching...'
        apk add --no-cache su-exec
        
        echo 'Setting up development environment...'
        # Ensure mounted volumes have correct ownership
        mkdir -p /app/ConduitLLM.WebUI/node_modules /app/ConduitLLM.WebUI/.next
        mkdir -p /app/SDKs/Node/Admin/node_modules /app/SDKs/Node/Core/node_modules /app/SDKs/Node/Common/node_modules
        
        # Only chown if directories are empty or owned by root
        if [ -z \"$(ls -A /app/ConduitLLM.WebUI/node_modules 2>/dev/null)\" ] || [ \"$(stat -c %u /app/ConduitLLM.WebUI/node_modules 2>/dev/null)\" = \"0\" ]; then
          chown ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} /app/ConduitLLM.WebUI/node_modules /app/ConduitLLM.WebUI/.next
        fi
        
        # Check and fix ownership for SDK directories individually
        for dir in /app/SDKs/Node/Admin/node_modules /app/SDKs/Node/Core/node_modules /app/SDKs/Node/Common/node_modules; do
          if [ -z \"$(ls -A \$dir 2>/dev/null)\" ] || [ \"$(stat -c %u \$dir 2>/dev/null)\" = \"0\" ]; then
            chown ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} \$dir
          fi
        done
        
        echo 'Installing SDK dependencies as user ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}...'
        su-exec ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} sh -c 'cd /app/SDKs/Node/Common && npm install && npm run build'
        su-exec ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} sh -c 'cd /app/SDKs/Node/Admin && npm install && npm run build'
        su-exec ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} sh -c 'cd /app/SDKs/Node/Core && npm install && npm run build'
        echo 'Installing WebUI dependencies...'
        su-exec ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} sh -c 'cd /app/ConduitLLM.WebUI && npm install'
        echo 'Starting development server...'
        su-exec ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000} sh -c 'cd /app/ConduitLLM.WebUI && npm run dev'
      "
    ports:
      - "3000:3000"
    depends_on:
      admin:
        condition: service_healthy
      api:
        condition: service_healthy

volumes:
  webui_node_modules:
  webui_next:
  admin_sdk_node_modules:
  core_sdk_node_modules:
  common_sdk_node_modules: